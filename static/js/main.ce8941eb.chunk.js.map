{"version":3,"sources":["serviceWorker.js","screens/main/countdown.js","screens/main/useNotification.js","screens/main/SelectionContext.js","screens/main/TodoListContext.js","screens/main/todo.js","screens/main/TodoListSelector.js","screens/main/index.js","index.js"],"names":["Boolean","window","location","hostname","match","buttonStyles","border","background","fontSize","padding","margin","width","phases","pomodoro","seconds","title","short-break","long-break","CountDownTimer","_useNotification","useEffect","Notification","requestPermission","text","concat","alert","Object","slicedToArray","_useReducer","useReducer","state","newState","objectSpread","running","_useReducer2","_useReducer2$","setState","timerRef","useRef","format","m","Math","floor","s","clearInterval","current","_format","_format2","document","_format3","_format4","remainingTime","react_default","a","createElement","Fragment","keys","map","phase","key","onClick","handleSetClick","style","display","currentTime","setInterval","disabled","defaultSelection","list","item","SelectionContext","React","createContext","SelectionProvider","_ref","children","_useLocalStorage","useLocalStorage","_useLocalStorage2","selection","setSelection","Provider","value","defaultTodoLists","list1","subtitle","estimated","completed","expanded","list2","TodoListContext","TodoListProvider","lists","setLists","_useContext","useContext","_useContext2","_useState","useState","_useState2","activeItems","setActiveItems","defineProperty","toConsumableArray","items","TodoTree","setItems","getNodeKey","treeIndex","update","field","node","path","changeNodeAtPath","treeData","newNode","index_esm","onChange","generateNodeProps","_ref2","event","target","type","buttons","addNodeUnderParent","parentKey","length","expandParent","removeNodeAtPath","TodoListSelector","props","_useContext3","_useContext4","todoLists","onSubmit","e","preventDefault","name","elements","htmlFor","placeholder","id","index","Main","textAlign","height","ReactDOM","render","main","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4KAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,+ECfN,IAAMC,EAAe,CACnBC,OAAQ,iBACRC,WAAY,OACZC,SAAU,MACVC,QAAS,GACTC,OAAQ,EACRC,MAAO,KAEHC,EAAS,CACbC,SAAU,CACRC,QAAS,KACTC,MAAO,YAETC,cAAe,CACbF,QAAS,IACTC,MAAO,eAETE,aAAc,CACZH,QAAS,IACTC,MAAO,eAIJ,SAASG,IAAiB,IAAAC,GCvB/BC,oBAAU,WACRC,aAAaC,qBACZ,IAMI,CAJP,SAAeC,GACb,IAAIF,aAAJ,GAAAG,OAAoBD,EAApB,aAAqC,ODmBhCE,EADwBC,OAAAC,EAAA,EAAAD,CAAAP,EAAA,MAAAS,EAEeC,qBAC5C,SAACC,EAAOC,GAAR,OAAAL,OAAAM,EAAA,EAAAN,CAAA,GACKI,EACAC,IAEL,CACEE,SAAS,EACTnB,QAAS,EACTC,MAAO,KAVoBmB,EAAAR,OAAAC,EAAA,EAAAD,CAAAE,EAAA,GAAAO,EAAAD,EAAA,GAEvBpB,EAFuBqB,EAEvBrB,QAASC,EAFcoB,EAEdpB,MAAOkB,EAFOE,EAEPF,QAAUG,EAFHF,EAAA,GAczBG,EAAWC,iBAAO,MA4CxB,SAASC,EAAOzB,GACd,IAAM0B,EAAIC,KAAKC,MAAO5B,EAAU,KAAQ,IAClC6B,EAAIF,KAAKC,MAAO5B,EAAU,KAAQ,IACxC,MAAO,IAAAU,OAAIgB,EAAI,GAAK,IAAM,IAAnBhB,OAAwBgB,GAAxB,GAAAhB,OAAgCmB,EAAI,GAAK,IAAM,IAA/CnB,OAAoDmB,IA7C7DvB,oBAAU,WAMR,OALAgB,EAAS,CACPtB,QAASF,EAAOC,SAASC,QACzBC,MAAOH,EAAOC,SAASE,QAGlB,kBAAM6B,cAAcP,EAASQ,WACnC,IAEHzB,oBAAU,WAAM,IAAA0B,EACCP,EAAOzB,GADRiC,EAAArB,OAAAC,EAAA,EAAAD,CAAAoB,EAAA,GACPN,EADOO,EAAA,GACJJ,EADII,EAAA,GAEdC,SAASjC,MAAT,GAAAS,OAAoBgB,EAApB,KAAAhB,OAAyBmB,EAAzB,OAAAnB,OAAgCT,IAC/B,CAACD,IA5B2B,IAAAmC,EAgEhBV,EAAOzB,GAhESoC,EAAAxB,OAAAC,EAAA,EAAAD,CAAAuB,EAAA,GAgExBT,EAhEwBU,EAAA,GAgErBP,EAhEqBO,EAAA,GAiEzBC,EAAa,GAAA3B,OAAMgB,EAAN,MAAAhB,OAAYmB,EAAZ,KAEnB,OACES,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACG7B,OAAO8B,KAAK5C,GAAQ6C,IAAI,SAAAC,GAAK,OAC5BN,EAAAC,EAAAC,cAAA,UACEK,IAAKD,EACLE,QAAS,kBAvBjB,SAAwBF,GACtBd,cAAcP,EAASQ,SACvBT,EAAS,CACPtB,QAAS4C,EAAM5C,QACfC,MAAO2C,EAAM3C,MACbkB,SAAS,IAkBU4B,CAAejD,EAAO8C,KACrCI,MAAOzD,GAENO,EAAO8C,GAAO3C,SAGnBqC,EAAAC,EAAAC,cAAA,SACEQ,MAAO,CACLtD,SAAU,MACVuD,QAAS,UAGVZ,GAEHC,EAAAC,EAAAC,cAAA,UACEM,QAzDN,WACE,GAAI3B,EACFW,cAAcP,EAASQ,aAClB,CACL,IAAImB,EAAclD,EAAU,EAC5BsB,EAAS,CAACtB,QAASkD,IAEnB3B,EAASQ,QAAUoB,YAAY,WACT,IAAhBD,GACFpB,cAAcP,EAASQ,SACvBpB,EAAMV,IAENqB,EAAS,CAACtB,UAAWkD,KAEtB,KAEL5B,EAAS,CAACH,SAAUA,KA0ChB6B,MAAOzD,EACP6D,SAAsB,IAAZpD,GAETmB,EAAU,OAAS,UAMbf,sDExHTiD,EAAmB,CACvBC,KAAM,QACNC,KAAM,SAGKC,EAAmBC,IAAMC,gBAEvB,SAASC,EAATC,GAAuC,IAAXC,EAAWD,EAAXC,SAAWC,EAClBC,IAChC,YACAV,GAHkDW,EAAApD,OAAAC,EAAA,EAAAD,CAAAkD,EAAA,GAC7CG,EAD6CD,EAAA,GAClCE,EADkCF,EAAA,GAKpD,OACE1B,EAAAC,EAAAC,cAACgB,EAAiBW,SAAlB,CAA2BC,MAAO,CAACH,EAAWC,IAC3CL,GCbP,IAAMQ,EAAmB,CACvBC,MAAO,CACL,CACErE,MAAO,QACPsE,SAAU,WACVC,UAAW,EACXC,UAAW,GAEb,CACExE,MAAO,QACPsE,SAAU,WACVC,UAAW,EACXC,UAAW,EACXC,UAAU,EACVb,SAAU,CACR,CACE5D,MAAO,UACPsE,SAAU,WACVC,UAAW,EACXC,UAAW,MAKnBE,MAAO,CACL,CACE1E,MAAO,QACPsE,SAAU,WACVC,UAAW,EACXC,UAAW,KAKJG,EAAkBnB,IAAMC,gBAEtB,SAASmB,EAATjB,GAAsC,IAAXC,EAAWD,EAAXC,SAAWC,EACzBC,IAAgB,aAAcM,GADLL,EAAApD,OAAAC,EAAA,EAAAD,CAAAkD,EAAA,GAC5CgB,EAD4Cd,EAAA,GACrCe,EADqCf,EAAA,GAAAgB,EAEjBC,qBAAWzB,GAFM0B,EAAAtE,OAAAC,EAAA,EAAAD,CAAAoE,EAAA,GAE5Cf,EAF4CiB,EAAA,GAAAC,GAAAD,EAAA,GAGbE,mBAAS,kBAAMN,EAAMb,EAAUX,SAHlB+B,EAAAzE,OAAAC,EAAA,EAAAD,CAAAuE,EAAA,GAG5CG,EAH4CD,EAAA,GAG/BE,EAH+BF,EAAA,GAiBnD,OAZA/E,oBAAU,WACRyE,EAASnE,OAAAM,EAAA,EAAAN,CAAA,GAEJkE,EAFGlE,OAAA4E,EAAA,EAAA5E,CAAA,GAGLqD,EAAUX,KAHL1C,OAAA6E,EAAA,EAAA7E,CAGgB0E,OAEvB,CAACA,IAEJhF,oBAAU,WACRiF,EAAe,SAAAG,GAAK,OAAA9E,OAAA6E,EAAA,EAAA7E,CAAQkE,EAAMb,EAAUX,UAC3C,CAACW,IAGF3B,EAAAC,EAAAC,cAACoC,EAAgBT,SAAjB,CACEC,MAAO,CAACkB,EAAaC,EAAgBT,EAAOC,IAE3ClB,GCpDA,SAAS8B,IAAW,IAAAX,EACCC,qBAAWL,GADZM,EAAAtE,OAAAC,EAAA,EAAAD,CAAAoE,EAAA,GAClBU,EADkBR,EAAA,GACXU,EADWV,EAAA,GAGnBW,EAAa,SAAAjC,GAAA,OAAAA,EAAEkC,WAEfC,EAAS,SAACC,EAAO5B,EAAO6B,EAAMC,GAClCN,EAAS,SAAAF,GAAK,OACZS,YAAiB,CACfC,SAAUV,EACVQ,OACAL,aACAQ,QAAQzF,OAAAM,EAAA,EAAAN,CAAA,GAAKqF,EAANrF,OAAA4E,EAAA,EAAA5E,CAAA,GAAaoF,EAAQ5B,SAKlC,OACE9B,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAA,UACEM,QAAS,kBACP8C,EAAS,SAAAF,GAAK,SAAAhF,OAAAE,OAAA6E,EAAA,EAAA7E,CACT8E,GADS,CAEZ,CACEzF,MAAK,YACLsE,SAAU,eACVC,UAAW,EACXC,UAAW,SARnB,OAeAnC,EAAAC,EAAAC,cAAC8D,EAAA,EAAD,CACEF,SAAUV,EACVa,SAAU,SAAAH,GAAQ,OAAIR,EAASQ,IAC/BI,kBAAmB,SAAAC,GAAA,IAAER,EAAFQ,EAAER,KAAMC,EAARO,EAAQP,KAAR,MAAmB,CACpCjG,MACEqC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAA,SACE4B,MAAO6B,EAAKhG,MACZsG,SAAU,SAAAG,GAAK,OACbX,EAAO,QAASW,EAAMC,OAAOvC,MAAO6B,EAAMC,MAG9C5D,EAAAC,EAAAC,cAAA,SACE4B,MAAO6B,EAAKzB,UACZoC,KAAK,SACLL,SAAU,SAAAG,GAAK,OACbX,EAAO,YAAaW,EAAMC,OAAOvC,MAAO6B,EAAMC,MAGlD5D,EAAAC,EAAAC,cAAA,aAAQyD,EAAKxB,YACXwB,EAAKpC,UAAYvB,EAAAC,EAAAC,cAAA,8BAGvB+B,SACEjC,EAAAC,EAAAC,cAAA,SACE4B,MAAO6B,EAAK1B,SACZgC,SAAU,SAAAG,GAAK,OACbX,EAAO,WAAYW,EAAMC,OAAOvC,MAAO6B,EAAMC,MAInDW,QAAS,CACPvE,EAAAC,EAAAC,cAAA,UACEM,QAAS,kBACP8C,EACE,SAAAF,GAAK,OACHoB,YAAmB,CACjBV,SAAUV,EACVqB,UAAWb,EAAKA,EAAKc,OAAS,GAC9BC,cAAc,EACdpB,aACAQ,QAAS,CACPpG,MAAK,MACLuE,UAAW,KAEZ4B,aAbX,aAmBA9D,EAAAC,EAAAC,cAAA,UACEM,QAAS,kBACP8C,EAAS,SAAAF,GAAK,OACZwB,YAAiB,CACfd,SAAUV,EACVQ,OACAL,mBANR,gBCzFL,SAASsB,EAAiBC,GAAO,IAAApC,EACJC,qBAAWzB,GADP0B,EAAAtE,OAAAC,EAAA,EAAAD,CAAAoE,EAAA,GAC/Bf,EAD+BiB,EAAA,GACpBhB,EADoBgB,EAAA,GAAAmC,EAEKpC,qBAAWL,GAFhB0C,EAAA1G,OAAAC,EAAA,EAAAD,CAAAyG,EAAA,GAEdvC,GAFcwC,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAEPvC,EAFOuC,EAAA,GAGhCC,EAAY3G,OAAO8B,KAAKoC,GAU9B,OACExC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,QAAMgF,SAZG,SAAAC,GACbA,EAAEC,iBADgB,IAEXC,EAAQF,EAAEd,OAAOiB,SAAjBD,KACP5C,EAAS,SAAAD,GAAK,OAAAlE,OAAAM,EAAA,EAAAN,CAAA,GACTkE,EADSlE,OAAA4E,EAAA,EAAA5E,CAAA,GAEX+G,EAAKvD,MAAQ,SAQV9B,EAAAC,EAAAC,cAAA,SAAOqF,QAAQ,WAAf,eACAvF,EAAAC,EAAAC,cAAA,SAAOmF,KAAK,OAAOG,YAAY,mBAAmBC,GAAG,YACrDzF,EAAAC,EAAAC,cAAA,UAAQoE,KAAK,UAAb,SAGJtE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UACEmF,KAAK,OACLvD,MAAOH,EAAS,KAChBsC,SAAU,SAAAkB,GAAC,OACTvD,EAAa,SAAAD,GAAS,OAAArD,OAAAM,EAAA,EAAAN,CAAA,GACjBqD,EADiB,CAEpBX,KAAMmE,EAAEd,OAAOvC,YAIlBmD,GACCA,EAAU5E,IAAI,SAACY,EAAMyE,GAAP,OACZ1F,EAAAC,EAAAC,cAAA,UAAQK,IAAKmF,EAAO5D,MAAOb,GACxBA,QCjBF0E,MAhBf,WACE,OACE3F,EAAAC,EAAAC,cAACmB,EAAD,KACErB,EAAAC,EAAAC,cAACqC,EAAD,KACEvC,EAAAC,EAAAC,cAAA,OAAKQ,MAAO,CAACkF,UAAW,WACtB5F,EAAAC,EAAAC,cAACpC,EAAD,MACAkC,EAAAC,EAAAC,cAAC2E,EAAD,MACA7E,EAAAC,EAAAC,cAAA,OAAKQ,MAAO,CAACmF,OAAQ,MACnB7F,EAAAC,EAAAC,cAACmD,EAAD,WCNZyC,IAASC,OAAO/F,EAAAC,EAAAC,cAJhB,WACE,OAAOF,EAAAC,EAAAC,cAAC8F,EAAD,OAGO,MAASpG,SAASqG,eAAe,SRwH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.ce8941eb.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA',\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.',\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React, {useReducer, useEffect, useRef} from 'react'\nimport {useNotification} from './useNotification'\n\nconst buttonStyles = {\n  border: '1px solid #ccc',\n  background: '#fff',\n  fontSize: '2em',\n  padding: 15,\n  margin: 5,\n  width: 200,\n}\nconst phases = {\n  pomodoro: {\n    seconds: 25 * 60,\n    title: 'Pomodoro',\n  },\n  'short-break': {\n    seconds: 5 * 60,\n    title: 'Short break',\n  },\n  'long-break': {\n    seconds: 15 * 60,\n    title: 'Long break',\n  },\n}\n\nexport function CountDownTimer() {\n  const [alert] = useNotification()\n  const [{seconds, title, running}, setState] = useReducer(\n    (state, newState) => ({\n      ...state,\n      ...newState,\n    }),\n    {\n      running: false,\n      seconds: 0,\n      title: '',\n    },\n  )\n\n  const timerRef = useRef(null)\n\n  useEffect(() => {\n    setState({\n      seconds: phases.pomodoro.seconds,\n      title: phases.pomodoro.title,\n    })\n\n    return () => clearInterval(timerRef.current)\n  }, [])\n\n  useEffect(() => {\n    const [m, s] = format(seconds)\n    document.title = `${m}:${s} - ${title}`\n  }, [seconds])\n\n  function handleRunClick() {\n    if (running) {\n      clearInterval(timerRef.current)\n    } else {\n      let currentTime = seconds - 1\n      setState({seconds: currentTime})\n\n      timerRef.current = setInterval(() => {\n        if (currentTime === 0) {\n          clearInterval(timerRef.current)\n          alert(title)\n        } else {\n          setState({seconds: --currentTime})\n        }\n      }, 1000)\n    }\n    setState({running: !running})\n  }\n\n  function handleSetClick(phase) {\n    clearInterval(timerRef.current)\n    setState({\n      seconds: phase.seconds,\n      title: phase.title,\n      running: false,\n    })\n  }\n\n  function format(seconds) {\n    const m = Math.floor((seconds % 3600) / 60)\n    const s = Math.floor((seconds % 3600) % 60)\n    return [`${m < 10 ? '0' : ''}${m}`, `${s < 10 ? '0' : ''}${s}`]\n  }\n\n  const [m, s] = format(seconds)\n  const remainingTime = `${m}m:${s}s`\n\n  return (\n    <>\n      {Object.keys(phases).map(phase => (\n        <button\n          key={phase}\n          onClick={() => handleSetClick(phases[phase])}\n          style={buttonStyles}\n        >\n          {phases[phase].title}\n        </button>\n      ))}\n      <label\n        style={{\n          fontSize: '5em',\n          display: 'block',\n        }}\n      >\n        {remainingTime}\n      </label>\n      <button\n        onClick={handleRunClick}\n        style={buttonStyles}\n        disabled={seconds === 0}\n      >\n        {running ? 'Stop' : 'Start'}\n      </button>\n    </>\n  )\n}\n\nexport default CountDownTimer\n","import {useEffect} from 'react'\n\nexport function useNotification() {\n  useEffect(() => {\n    Notification.requestPermission()\n  }, [])\n\n  function alert(text) {\n    new Notification(`${text} is over!`, {})\n  }\n\n  return [alert]\n}\n","import React, {useState} from 'react'\nimport useLocalStorage from 'react-use/lib/useLocalStorage'\n\nconst defaultSelection = {\n  list: 'list2',\n  item: 'todo1',\n}\n\nexport const SelectionContext = React.createContext()\n\nexport default function SelectionProvider({children}) {\n  const [selection, setSelection] = useLocalStorage(\n    'selection',\n    defaultSelection,\n  )\n  return (\n    <SelectionContext.Provider value={[selection, setSelection]}>\n      {children}\n    </SelectionContext.Provider>\n  )\n}\n","import React, {useState, useContext, useEffect} from 'react'\nimport useLocalStorage from 'react-use/lib/useLocalStorage'\nimport {SelectionContext} from './SelectionContext'\n\nconst defaultTodoLists = {\n  list1: [\n    {\n      title: 'todo1',\n      subtitle: 'subtitle',\n      estimated: 3,\n      completed: 0,\n    },\n    {\n      title: 'todo2',\n      subtitle: 'subtitle',\n      estimated: 2,\n      completed: 1,\n      expanded: true,\n      children: [\n        {\n          title: 'todo2.1',\n          subtitle: 'subtitle',\n          estimated: 4,\n          completed: 0,\n        },\n      ],\n    },\n  ],\n  list2: [\n    {\n      title: 'todo1',\n      subtitle: 'subtitle',\n      estimated: 4,\n      completed: 0,\n    },\n  ],\n}\n\nexport const TodoListContext = React.createContext()\n\nexport default function TodoListProvider({children}) {\n  const [lists, setLists] = useLocalStorage('todo-lists', defaultTodoLists)\n  const [selection, setSelection] = useContext(SelectionContext)\n  const [activeItems, setActiveItems] = useState(() => lists[selection.list])\n\n  useEffect(() => {\n    setLists({\n      //TODO merge professinal\n      ...lists,\n      [selection.list]: [...activeItems],\n    })\n  }, [activeItems])\n\n  useEffect(() => {\n    setActiveItems(items => [...lists[selection.list]])\n  }, [selection])\n\n  return (\n    <TodoListContext.Provider\n      value={[activeItems, setActiveItems, lists, setLists]}\n    >\n      {children}\n    </TodoListContext.Provider>\n  )\n}\n","import React, {useContext} from 'react'\nimport 'react-sortable-tree/style.css'\nimport SortableTree, {\n  changeNodeAtPath,\n  addNodeUnderParent,\n  removeNodeAtPath,\n} from 'react-sortable-tree'\nimport {TodoListContext} from './TodoListContext'\n\nexport function TodoTree() {\n  const [items, setItems] = useContext(TodoListContext)\n\n  const getNodeKey = ({treeIndex}) => treeIndex\n\n  const update = (field, value, node, path) => {\n    setItems(items =>\n      changeNodeAtPath({\n        treeData: items,\n        path,\n        getNodeKey,\n        newNode: {...node, [field]: value},\n      }),\n    )\n  }\n\n  return (\n    <>\n      <button\n        onClick={() =>\n          setItems(items => [\n            ...items,\n            {\n              title: `new title`,\n              subtitle: 'new subtitle',\n              estimated: 0,\n              completed: 0,\n            },\n          ])\n        }\n      >\n        Add\n      </button>\n      <SortableTree\n        treeData={items}\n        onChange={treeData => setItems(treeData)}\n        generateNodeProps={({node, path}) => ({\n          title: (\n            <>\n              <input\n                value={node.title}\n                onChange={event =>\n                  update('title', event.target.value, node, path)\n                }\n              />\n              <input\n                value={node.estimated}\n                type=\"number\"\n                onChange={event =>\n                  update('estimated', event.target.value, node, path)\n                }\n              />\n              <label>{node.completed}</label>\n              {!node.children && <label>\"selectable\"</label>}\n            </>\n          ),\n          subtitle: (\n            <input\n              value={node.subtitle}\n              onChange={event =>\n                update('subtitle', event.target.value, node, path)\n              }\n            />\n          ),\n          buttons: [\n            <button\n              onClick={() =>\n                setItems(\n                  items =>\n                    addNodeUnderParent({\n                      treeData: items,\n                      parentKey: path[path.length - 1],\n                      expandParent: true,\n                      getNodeKey,\n                      newNode: {\n                        title: `new`,\n                        estimated: 0,\n                      },\n                    }).treeData,\n                )\n              }\n            >\n              Add Child\n            </button>,\n            <button\n              onClick={() =>\n                setItems(items =>\n                  removeNodeAtPath({\n                    treeData: items,\n                    path,\n                    getNodeKey,\n                  }),\n                )\n              }\n            >\n              Remove\n            </button>,\n          ],\n        })}\n      />\n    </>\n  )\n}\n","import React, {useContext, useState} from 'react'\nimport {SelectionContext} from './SelectionContext'\nimport {TodoListContext} from './TodoListContext'\n\nexport function TodoListSelector(props) {\n  const [selection, setSelection] = useContext(SelectionContext)\n  const [items, setItems, lists, setLists] = useContext(TodoListContext)\n  const todoLists = Object.keys(lists)\n  const submit = e => {\n    e.preventDefault()\n    const {name} = e.target.elements\n    setLists(lists => ({\n      ...lists,\n      [name.value]: [],\n    }))\n  }\n\n  return (\n    <div>\n      <div>\n        <form onSubmit={submit}>\n          <label htmlFor=\"name-id\">Add to list</label>\n          <input name=\"name\" placeholder=\"Name of the list\" id=\"name-id\" />\n          <button type=\"submit\">Add</button>\n        </form>\n      </div>\n      <div>\n        <select\n          name=\"list\"\n          value={selection['list']}\n          onChange={e =>\n            setSelection(selection => ({\n              ...selection,\n              list: e.target.value,\n            }))\n          }\n        >\n          {todoLists &&\n            todoLists.map((item, index) => (\n              <option key={index} value={item}>\n                {item}\n              </option>\n            ))}\n        </select>\n      </div>\n    </div>\n  )\n}\n","import React, {useState, useContext} from 'react'\nimport {CountDownTimer} from './countdown'\nimport {TodoTree} from './todo'\nimport {TodoListSelector} from './TodoListSelector'\nimport TodoListProvider from './TodoListContext'\nimport SelectionProvider from './SelectionContext'\n\nfunction Main() {\n  return (\n    <SelectionProvider>\n      <TodoListProvider>\n        <div style={{textAlign: 'center'}}>\n          <CountDownTimer />\n          <TodoListSelector />\n          <div style={{height: 400}}>\n            <TodoTree />\n          </div>\n        </div>\n      </TodoListProvider>\n    </SelectionProvider>\n  )\n}\n\nexport default Main\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport * as serviceWorker from './serviceWorker'\nimport Main from './screens/main'\n\nfunction App() {\n  return <Main />\n}\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}