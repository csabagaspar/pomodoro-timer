{"version":3,"sources":["serviceWorker.js","contexts/SelectionContext.js","contexts/TodoListContext.js","contexts/ActiveContext.js","views/CountDownTimer.js","utils/useNotification.js","utils/useTimeout.js","views/TodoTree.js","views/TodoListSelector.js","layouts/main.js","index.js"],"names":["Boolean","window","location","hostname","match","defaultSelection","list","item","SelectionContext","React","createContext","SelectionProvider","_ref","children","_useLocalStorage","useLocalStorage","_useLocalStorage2","Object","slicedToArray","selection","setSelection","react_default","a","createElement","Provider","value","defaultTodoLists","list1","id","title","subtitle","estimated","completed","expanded","list2","TodoListContext","TodoListProvider","lists","setLists","ActiveContext","ActiveProvider","_useContext","useContext","_useContext2","_useContext3","_useContext4","_useState","useState","_useState2","activeItems","setActiveItems","useEffect","console","log","objectSpread","defineProperty","toConsumableArray","items","buttonStyles","border","background","fontSize","padding","margin","width","phases","pomodoro","seconds","short-break","long-break","CountDownTimer","_useNotification","Notification","requestPermission","text","concat","alert","update","activeList","setActiveList","getNodeKey","node","selectedItem","matches","find","treeData","searchMethod","modifiedTreeData","changeNodeAtPath","path","newNode","useTimeout","_useReducer","useReducer","state","newState","running","_useReducer2","_useReducer2$","setState","timerRef","useRef","clearInterval","current","_format","format","_format2","m","s","document","createInterval","currentTime","setInterval","Math","floor","_format3","_format4","remainingTime","Fragment","keys","map","phase","key","onClick","handleSetClick","style","display","disabled","TodoTree","setItems","random","field","index_esm","height","rowHeight","theme","FileExplorerTheme","_ref2","onChange","generateNodeProps","_ref3","event","target","type","rows","cols","buttons","addNodeUnderParent","parentKey","length","expandParent","removeNodeAtPath","readOnly","checked","TodoListSelector","props","_useContext5","_useContext6","todoListName","setTodoListName","todoLists","onSubmit","e","preventDefault","trim","htmlFor","name","placeholder","rest","objectWithoutProperties","_toPropertyKey","listName","index","Main","textAlign","ReactDOM","render","layouts_main","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.45dedd00.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA',\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.',\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React, {useState} from 'react'\nimport useLocalStorage from 'react-use/lib/useLocalStorage'\n\nconst defaultSelection = {\n  list: 'list2',\n  item: 4,\n}\n\nexport const SelectionContext = React.createContext()\n\nexport default function SelectionProvider({children}) {\n  const [selection, setSelection] = useLocalStorage(\n    'selection',\n    defaultSelection,\n  )\n  return (\n    <SelectionContext.Provider value={[selection, setSelection]}>\n      {children}\n    </SelectionContext.Provider>\n  )\n}\n","import React, {useState, useContext, useEffect} from 'react'\nimport useLocalStorage from 'react-use/lib/useLocalStorage'\nimport {SelectionContext} from './SelectionContext'\n\nconst defaultTodoLists = {\n  list1: [\n    {\n      id: 1,\n      title: 'todo1',\n      subtitle: 'subtitle',\n      estimated: 3,\n      completed: 0,\n    },\n    {\n      id: 2,\n      title: 'todo2',\n      subtitle: 'subtitle',\n      estimated: 2,\n      completed: 1,\n      expanded: true,\n      children: [\n        {\n          id: 3,\n          title: 'todo2.1',\n          subtitle: 'subtitle',\n          estimated: 4,\n          completed: 0,\n        },\n      ],\n    },\n  ],\n  list2: [\n    {\n      id: 4,\n      title: 'todo1',\n      subtitle: 'subtitle',\n      estimated: 4,\n      completed: 0,\n    },\n  ],\n}\n\nexport const TodoListContext = React.createContext()\n\nexport default function TodoListProvider({children}) {\n  const [lists, setLists] = useLocalStorage('items', defaultTodoLists)\n\n  return (\n    <TodoListContext.Provider value={[lists, setLists]}>\n      {children}\n    </TodoListContext.Provider>\n  )\n}\n","import React, {useState, useContext, useEffect} from 'react'\nimport useLocalStorage from 'react-use/lib/useLocalStorage'\n\nimport {SelectionContext} from './SelectionContext'\nimport {TodoListContext} from './TodoListContext'\n\nexport const ActiveContext = React.createContext()\n\nexport default function ActiveProvider({children}) {\n  const [lists, setLists] = useContext(TodoListContext)\n  const [selection, setSelection] = useContext(SelectionContext)\n  const [activeItems, setActiveItems] = useState(() => lists[selection.list])\n\n  useEffect(() => {\n    console.log('new activeList', activeItems)\n    setLists({\n      //TODO merge professinal\n      ...lists,\n      [selection.list]: [...activeItems],\n    })\n  }, [activeItems])\n\n  useEffect(() => {\n    console.log('new selection.list:', selection.list)\n    setActiveItems(items => [...lists[selection.list]])\n  }, [selection.list])\n\n  return (\n    <ActiveContext.Provider value={[activeItems, setActiveItems]}>\n      {children}\n    </ActiveContext.Provider>\n  )\n}\n","import React, {useReducer, useEffect, useRef} from 'react'\nimport {useNotification} from '../utils/useNotification'\nimport {useTimeout} from '../utils/useTimeout'\n\nconst buttonStyles = {\n  border: '1px solid #ccc',\n  background: '#fff',\n  fontSize: '2em',\n  padding: 15,\n  margin: 5,\n  width: 200,\n}\nconst phases = {\n  pomodoro: {\n    seconds: 25 * 60,\n    title: 'Pomodoro',\n  },\n  'short-break': {\n    seconds: 5 * 60,\n    title: 'Short break',\n  },\n  'long-break': {\n    seconds: 15 * 60,\n    title: 'Long break',\n  },\n}\n\nexport function CountDownTimer() {\n  const [alert] = useNotification()\n  const {update} = useTimeout()\n\n  const [{seconds, title, running}, setState] = useReducer(\n    (state, newState) => ({\n      ...state,\n      ...newState,\n    }),\n    {\n      running: false,\n      seconds: 0,\n      title: '',\n    },\n  )\n\n  const timerRef = useRef(null)\n\n  useEffect(() => {\n    setState({\n      seconds: phases.pomodoro.seconds,\n      title: phases.pomodoro.title,\n    })\n\n    return () => clearInterval(timerRef.current)\n  }, [])\n\n  useEffect(() => {\n    const [m, s] = format(seconds)\n    document.title = `${m}:${s} - ${title}`\n  }, [seconds])\n\n  function handleRunClick() {\n    if (running) {\n      clearInterval(timerRef.current)\n    } else {\n      let currentTime = seconds - 1\n      setState({seconds: currentTime})\n      createInterval(currentTime)\n    }\n    setState({running: !running})\n  }\n\n  function handleSetClick(phase) {\n    clearInterval(timerRef.current)\n    let currentTime = phase.seconds - 1\n\n    setState({\n      seconds: currentTime,\n      title: phase.title,\n      running: false,\n    })\n\n    createInterval(currentTime)\n    setState({running: true})\n  }\n\n  const createInterval = currentTime => {\n    timerRef.current = setInterval(() => {\n      if (currentTime === 0) {\n        clearInterval(timerRef.current)\n        alert(title)\n        if (title === 'Pomodoro') {\n          update()\n        }\n      } else {\n        setState({seconds: --currentTime})\n      }\n    }, 1000)\n  }\n\n  function format(seconds) {\n    const m = Math.floor((seconds % 3600) / 60)\n    const s = Math.floor((seconds % 3600) % 60)\n    return [`${m < 10 ? '0' : ''}${m}`, `${s < 10 ? '0' : ''}${s}`]\n  }\n\n  const [m, s] = format(seconds)\n  const remainingTime = `${m}m:${s}s`\n\n  return (\n    <>\n      {Object.keys(phases).map(phase => (\n        <button\n          key={phase}\n          onClick={() => handleSetClick(phases[phase])}\n          style={buttonStyles}\n        >\n          {phases[phase].title}\n        </button>\n      ))}\n      <label\n        style={{\n          fontSize: '5em',\n          display: 'block',\n        }}\n      >\n        {remainingTime}\n      </label>\n      <button\n        onClick={handleRunClick}\n        style={buttonStyles}\n        disabled={seconds === 0}\n      >\n        {running ? 'Stop' : 'Start'}\n      </button>\n    </>\n  )\n}\n\nexport default CountDownTimer\n","import {useEffect} from 'react'\n\nexport function useNotification() {\n  useEffect(() => {\n    Notification.requestPermission()\n  }, [])\n\n  function alert(text) {\n    new Notification(`${text} is over!`, {})\n  }\n\n  return [alert]\n}\n","import {useContext} from 'react'\nimport {ActiveContext} from '../contexts/ActiveContext'\nimport {SelectionContext} from '../contexts/SelectionContext'\n\nimport {find, changeNodeAtPath} from 'react-sortable-tree'\nexport function useTimeout() {\n  const [selection, setSelection] = useContext(SelectionContext)\n  const [activeList, setActiveList] = useContext(ActiveContext)\n\n  const getNodeKey = ({node}) => node.id\n\n  function update() {\n    const selectedItem = selection.item\n    if (!selectedItem) return\n\n    const result = find({\n      getNodeKey: getNodeKey,\n      treeData: activeList,\n      searchMethod: item => item.node.id === selectedItem,\n    })\n    const matches = result.matches[0]\n\n    const modifiedTreeData = changeNodeAtPath({\n      treeData: activeList,\n      path: matches.path,\n      getNodeKey,\n      newNode: {...matches.node, completed: matches.node.completed + 1},\n    })\n\n    setActiveList(activeList => [...modifiedTreeData])\n  }\n\n  return {update}\n}\n","import React, {useContext} from 'react'\nimport 'react-sortable-tree/style.css'\nimport SortableTree, {\n  changeNodeAtPath,\n  addNodeUnderParent,\n  removeNodeAtPath,\n} from 'react-sortable-tree'\nimport {ActiveContext} from '../contexts/ActiveContext'\nimport {SelectionContext} from '../contexts/SelectionContext'\nimport FileExplorerTheme from 'react-sortable-tree-theme-minimal'\n\nexport function TodoTree() {\n  const [items, setItems] = useContext(ActiveContext)\n  const [selection, setSelection] = useContext(SelectionContext)\n\n  const getNodeKey = ({node}) => node.id\n  const newNode = () => ({\n    id: Math.random(),\n    title: `new title`,\n    subtitle: 'new details',\n    estimated: 0,\n    completed: 0,\n  })\n\n  const update = (field, value, node, path) => {\n    setItems(items =>\n      changeNodeAtPath({\n        treeData: items,\n        path,\n        getNodeKey,\n        newNode: {...node, [field]: value},\n      }),\n    )\n  }\n\n  return (\n    <>\n      <button onClick={() => setItems(items => [...items, newNode()])}>\n        Add\n      </button>\n      <SortableTree\n        style={{\n          height: '50rem',\n        }}\n        treeData={items}\n        rowHeight={150}\n        theme={FileExplorerTheme}\n        getNodeKey={({node}) => node.id}\n        onChange={treeData => setItems(treeData)}\n        generateNodeProps={({node, path}) => ({\n          title: (\n            <>\n              <input\n                style={{\n                  width: '90%',\n                }}\n                value={node.title}\n                onChange={event =>\n                  update('title', event.target.value, node, path)\n                }\n              />\n              <input\n                style={{\n                  width: '40px',\n                }}\n                value={node.estimated}\n                type=\"number\"\n                onChange={event =>\n                  update('estimated', event.target.value, node, path)\n                }\n              />\n              <label>{node.completed}</label>\n            </>\n          ),\n          subtitle: (\n            <textarea\n              style={{}}\n              rows={5}\n              cols={60}\n              value={node.subtitle}\n              onChange={event =>\n                update('subtitle', event.target.value, node, path)\n              }\n            />\n          ),\n          buttons: [\n            <button\n              onClick={() => {\n                setItems(\n                  items =>\n                    addNodeUnderParent({\n                      treeData: items,\n                      parentKey: path[path.length - 1],\n                      expandParent: true,\n                      getNodeKey,\n                      newNode: newNode(),\n                    }).treeData,\n                )\n              }}\n            >\n              Add\n            </button>,\n            <button\n              onClick={() =>\n                setItems(items =>\n                  removeNodeAtPath({\n                    treeData: items,\n                    path,\n                    getNodeKey,\n                  }),\n                )\n              }\n            >\n              X\n            </button>,\n            <input\n              type=\"radio\"\n              readOnly\n              checked={node.id === selection.item}\n              onClick={() => {\n                setSelection(selection => ({\n                  ...selection,\n                  item: node.id,\n                }))\n              }}\n            />,\n          ],\n        })}\n      />\n    </>\n  )\n}\n","import React, {useContext, useState} from 'react'\nimport {SelectionContext} from '../contexts/SelectionContext'\nimport {TodoListContext} from '../contexts/TodoListContext'\n\nexport function TodoListSelector(props) {\n  const [selection, setSelection] = useContext(SelectionContext)\n  const [lists, setLists] = useContext(TodoListContext)\n  const [active, setActive] = useContext(TodoListContext)\n  const [todoListName, setTodoListName] = useState('')\n\n  const todoLists = Object.keys(lists)\n\n  const handleAdd = e => {\n    e.preventDefault()\n    if (!todoListName) return\n\n    setLists(lists => ({\n      ...lists,\n      [todoListName.trim()]: [],\n    }))\n    setTodoListName('')\n  }\n\n  const handleChange = e => {\n    const listName = e.target.value\n    setSelection(selection => ({\n      list: listName,\n      item: '',\n    }))\n\n  }\n\nconst handleRemove = e => {\n  e.preventDefault()\n  if (Object.keys(lists).length === 1) {\n    alert('cannot remove last list')\n    return\n  }\n\n  let {[selection['list']]: omit, ...rest} = lists\n  setLists(lists => rest)\n  setSelection(selection => ({\n    list: Object.keys(rest)[0],\n    item: '',\n  }))\n}\n\n\nreturn (\n  <div>\n    <div>\n      <form onSubmit={handleAdd}>\n        <label htmlFor=\"name-id\">Add new list</label>\n        <input\n          name=\"name\"\n          value={todoListName}\n          onChange={e => setTodoListName(e.target.value)}\n          placeholder=\"Name of the list\"\n          id=\"name-id\"\n        />\n        <button type=\"submit\">Add</button>\n      </form>\n    </div>\n    <div>\n      <form onSubmit={handleRemove}>\n        <label htmlFor=\"name-id\">Remove a list</label>\n        <select\n          name=\"list\"\n          value={selection['list']}\n          onChange={handleChange}\n        >\n          {todoLists &&\n              todoLists.map((item, index) => (\n                <option key={index} value={item}>\n                  {item}\n                </option>\n              ))}\n            </select>\n            <button type=\"submit\">Remove</button>\n          </form>\n        </div>\n   </div>\n  )\n}\n","import React, {useState, useContext} from 'react'\nimport {CountDownTimer} from '../views/CountDownTimer'\nimport {TodoTree} from '../views/TodoTree'\nimport {TodoListSelector} from '../views/TodoListSelector'\n\nimport TodoListProvider from '../contexts/TodoListContext'\nimport SelectionProvider from '../contexts/SelectionContext'\nimport ActiveProvider from '../contexts/ActiveContext'\n\nfunction Main() {\n  return (\n    <SelectionProvider>\n      <TodoListProvider>\n        <ActiveProvider>\n          <div style={{textAlign: 'center'}}>\n            <CountDownTimer />\n            <TodoListSelector />\n            <div style={{height: 400}}>\n              <TodoTree />\n            </div>\n          </div>\n        </ActiveProvider>\n      </TodoListProvider>\n    </SelectionProvider>\n  )\n}\n\nexport default Main\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport * as serviceWorker from './serviceWorker'\nimport Main from './layouts/main'\n\nfunction App() {\n  return <Main />\n}\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}