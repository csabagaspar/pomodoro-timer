{"version":3,"sources":["serviceWorker.js","contexts/ActiveListNameContext.js","contexts/ListsContext.js","contexts/ActiveListContext.js","contexts/ActiveListItemIdContext.js","views/CountDownTimer.js","utils/useNotification.js","utils/useTimeout.js","views/TodoTree.js","views/TodoListSelector.js","layouts/main.js","index.js"],"names":["Boolean","window","location","hostname","match","defaultActiveListName","ActiveListNameContext","React","createContext","ActiveListNameProvider","_ref","children","_useLocalStorage","useLocalStorage","_useLocalStorage2","Object","slicedToArray","activeListName","setActiveListName","react_default","a","createElement","Provider","value","defaultLists","list1","id","title","subtitle","estimated","completed","expanded","list2","ListsContext","ListsProvider","lists","setLists","ActiveListContext","ActiveListProvider","_useContext","useContext","_useContext2","_useContext3","_useContext4","_useState","useState","_useState2","activeList","setActiveList","useEffect","objectSpread","defineProperty","toConsumableArray","defaultActiveListItemId","ActiveListItemIdContext","ActiveListItemIdProvider","activeListItemId","setActiveListItemId","buttonStyles","border","background","fontSize","padding","margin","width","phases","pomodoro","seconds","short-break","long-break","CountDownTimer","_useNotification","Notification","requestPermission","text","concat","alert","update","getNodeKey","node","selectedItem","matches","find","treeData","searchMethod","item","modifiedTreeData","changeNodeAtPath","path","newNode","useTimeout","_useReducer","useReducer","state","newState","running","_useReducer2","_useReducer2$","setState","timerRef","useRef","clearInterval","current","_format","format","_format2","m","s","document","createInterval","currentTime","setInterval","Math","floor","_format3","_format4","remainingTime","Fragment","keys","map","phase","key","onClick","handleSetClick","style","display","disabled","TodoTree","items","setItems","console","log","random","field","index_esm","height","rowHeight","theme","FileExplorerTheme","_ref2","onChange","generateNodeProps","_ref3","event","target","type","rows","cols","buttons","addNodeUnderParent","parentKey","length","expandParent","removeNodeAtPath","readOnly","checked","TodoListSelector","props","_useContext5","_useContext6","todoListName","setTodoListName","todoLists","onSubmit","e","preventDefault","trim","htmlFor","name","placeholder","rest","objectWithoutProperties","_toPropertyKey","index","Main","textAlign","ReactDOM","render","layouts_main","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.93318abc.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA',\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.',\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React, {useState} from 'react'\nimport useLocalStorage from 'react-use/lib/useLocalStorage'\n\nconst defaultActiveListName = 'list2'\n\nexport const ActiveListNameContext = React.createContext()\n\nexport default function ActiveListNameProvider({children}) {\n  const [activeListName, setActiveListName] = useLocalStorage(\n    'activeListName',\n    defaultActiveListName,\n  )\n  return (\n    <ActiveListNameContext.Provider value={[activeListName, setActiveListName]}>\n      {children}\n    </ActiveListNameContext.Provider>\n  )\n}\n","import React, {useState, useContext, useEffect} from 'react'\nimport useLocalStorage from 'react-use/lib/useLocalStorage'\n\nconst defaultLists = {\n  list1: [\n    {\n      id: 1,\n      title: 'todo1',\n      subtitle: 'subtitle',\n      estimated: 3,\n      completed: 0,\n    },\n    {\n      id: 2,\n      title: 'todo2',\n      subtitle: 'subtitle',\n      estimated: 2,\n      completed: 1,\n      expanded: true,\n      children: [\n        {\n          id: 3,\n          title: 'todo2.1',\n          subtitle: 'subtitle',\n          estimated: 4,\n          completed: 0,\n        },\n      ],\n    },\n  ],\n  list2: [\n    {\n      id: 4,\n      title: 'todo1',\n      subtitle: 'subtitle',\n      estimated: 4,\n      completed: 0,\n    },\n  ],\n}\n\nexport const ListsContext = React.createContext()\n\nexport default function ListsProvider({children}) {\n  const [lists, setLists] = useLocalStorage('items', defaultLists)\n\n  return (\n    <ListsContext.Provider value={[lists, setLists]}>\n      {children}\n    </ListsContext.Provider>\n  )\n}\n","import React, {useState, useContext, useEffect} from 'react'\nimport useLocalStorage from 'react-use/lib/useLocalStorage'\n\nimport {ActiveListNameContext} from './ActiveListNameContext'\nimport {ListsContext} from './ListsContext'\n\nexport const ActiveListContext = React.createContext()\n\nexport default function ActiveListProvider({children}) {\n  const [lists, setLists] = useContext(ListsContext)\n  const [activeListName, setActiveListName] = useContext(ActiveListNameContext)\n\n  const [activeList, setActiveList] = useState(() => lists[activeListName])\n\n  useEffect(() => {\n    setLists({\n      ...lists,\n      [activeListName]: [...activeList],\n    })\n  }, [activeList])\n\n  return (\n    <ActiveListContext.Provider value={[activeList, setActiveList]}>\n      {children}\n    </ActiveListContext.Provider>\n  )\n}\n","import React, {useState} from 'react'\nimport useLocalStorage from 'react-use/lib/useLocalStorage'\n\nconst defaultActiveListItemId = 4\n\nexport const ActiveListItemIdContext = React.createContext()\n\nexport default function ActiveListItemIdProvider({children}) {\n  const [activeListItemId, setActiveListItemId] = useLocalStorage(\n    'activeListItemId',\n    defaultActiveListItemId,\n  )\n  return (\n    <ActiveListItemIdContext.Provider\n      value={[activeListItemId, setActiveListItemId]}\n    >\n      {children}\n    </ActiveListItemIdContext.Provider>\n  )\n}\n","import React, {useReducer, useEffect, useRef} from 'react'\nimport {useNotification} from '../utils/useNotification'\nimport {useTimeout} from '../utils/useTimeout'\n\nconst buttonStyles = {\n  border: '1px solid #ccc',\n  background: '#fff',\n  fontSize: '2em',\n  padding: 15,\n  margin: 5,\n  width: 200,\n}\nconst phases = {\n  pomodoro: {\n    seconds: 25 * 60,\n    title: 'Pomodoro',\n  },\n  'short-break': {\n    seconds: 5 * 60,\n    title: 'Short break',\n  },\n  'long-break': {\n    seconds: 15 * 60,\n    title: 'Long break',\n  },\n}\n\nexport function CountDownTimer() {\n  const [alert] = useNotification()\n  const {update} = useTimeout()\n\n  const [{seconds, title, running}, setState] = useReducer(\n    (state, newState) => ({\n      ...state,\n      ...newState,\n    }),\n    {\n      running: false,\n      seconds: 0,\n      title: '',\n    },\n  )\n\n  const timerRef = useRef(null)\n\n  useEffect(() => {\n    setState({\n      seconds: phases.pomodoro.seconds,\n      title: phases.pomodoro.title,\n    })\n\n    return () => clearInterval(timerRef.current)\n  }, [])\n\n  useEffect(() => {\n    const [m, s] = format(seconds)\n    document.title = `${m}:${s} - ${title}`\n  }, [seconds])\n\n  function handleRunClick() {\n    if (running) {\n      clearInterval(timerRef.current)\n    } else {\n      let currentTime = seconds - 1\n      setState({seconds: currentTime})\n      createInterval(currentTime)\n    }\n    setState({running: !running})\n  }\n\n  function handleSetClick(phase) {\n    clearInterval(timerRef.current)\n    let currentTime = phase.seconds - 1\n\n    setState({\n      seconds: currentTime,\n      title: phase.title,\n      running: false,\n    })\n\n    createInterval(currentTime)\n    setState({running: true})\n  }\n\n  const createInterval = currentTime => {\n    timerRef.current = setInterval(() => {\n      if (currentTime === 0) {\n        clearInterval(timerRef.current)\n        alert(title)\n        if (title === 'Pomodoro') {\n          update()\n        }\n      } else {\n        setState({seconds: --currentTime})\n      }\n    }, 1000)\n  }\n\n  function format(seconds) {\n    const m = Math.floor((seconds % 3600) / 60)\n    const s = Math.floor((seconds % 3600) % 60)\n    return [`${m < 10 ? '0' : ''}${m}`, `${s < 10 ? '0' : ''}${s}`]\n  }\n\n  const [m, s] = format(seconds)\n  const remainingTime = `${m}m:${s}s`\n\n  return (\n    <>\n      {Object.keys(phases).map(phase => (\n        <button\n          key={phase}\n          onClick={() => handleSetClick(phases[phase])}\n          style={buttonStyles}\n        >\n          {phases[phase].title}\n        </button>\n      ))}\n      <label\n        style={{\n          fontSize: '5em',\n          display: 'block',\n        }}\n      >\n        {remainingTime}\n      </label>\n      <button\n        onClick={handleRunClick}\n        style={buttonStyles}\n        disabled={seconds === 0}\n      >\n        {running ? 'Stop' : 'Start'}\n      </button>\n    </>\n  )\n}\n\nexport default CountDownTimer\n","import {useEffect} from 'react'\n\nexport function useNotification() {\n  useEffect(() => {\n    Notification.requestPermission()\n  }, [])\n\n  function alert(text) {\n    new Notification(`${text} is over!`, {})\n  }\n\n  return [alert]\n}\n","import {useContext} from 'react'\nimport {ActiveListContext} from '../contexts/ActiveListContext'\nimport {ActiveListItemIdContext} from '../contexts/ActiveListItemIdContext'\n\nimport {find, changeNodeAtPath} from 'react-sortable-tree'\n\nexport function useTimeout() {\n  const [activeListItemId, setActiveListItemId] = useContext(ActiveListItemIdContext)\n  const [activeList, setActiveList] = useContext(ActiveListContext)\n\n  const getNodeKey = ({node}) => node.id\n\n  function update() {\n    const selectedItem = activeListItemId\n    if (!selectedItem) return\n\n    const result = find({\n      getNodeKey: getNodeKey,\n      treeData: activeList,\n      searchMethod: item => item.node.id === selectedItem,\n    })\n    const matches = result.matches[0]\n\n    const modifiedTreeData = changeNodeAtPath({\n      treeData: activeList,\n      path: matches.path,\n      getNodeKey,\n      newNode: {...matches.node, completed: matches.node.completed + 1},\n    })\n\n    setActiveList(activeList => [...modifiedTreeData])\n  }\n\n  return {update}\n}\n","import React, {useContext} from 'react'\nimport 'react-sortable-tree/style.css'\nimport SortableTree, {\n  changeNodeAtPath,\n  addNodeUnderParent,\n  removeNodeAtPath,\n} from 'react-sortable-tree'\nimport {ActiveListContext} from '../contexts/ActiveListContext'\nimport {ActiveListItemIdContext} from '../contexts/ActiveListItemIdContext'\nimport FileExplorerTheme from 'react-sortable-tree-theme-minimal'\n\nexport function TodoTree() {\n  const [items, setItems] = useContext(ActiveListContext)\n  const [activeListItemId, setActiveListItemId] = useContext(\n    ActiveListItemIdContext,\n  )\n\n  console.log('activeListintodotree', items)\n\n  const getNodeKey = ({node}) => node.id\n  const newNode = () => ({\n    id: Math.random(),\n    title: `new title`,\n    subtitle: 'new details',\n    estimated: 0,\n    completed: 0,\n  })\n\n  const update = (field, value, node, path) => {\n    setItems(items =>\n      changeNodeAtPath({\n        treeData: items,\n        path,\n        getNodeKey,\n        newNode: {...node, [field]: value},\n      }),\n    )\n  }\n\n  return (\n    <>\n      <button onClick={() => setItems(items => [...items, newNode()])}>\n        Add\n      </button>\n      <SortableTree\n        style={{\n          height: '50rem',\n        }}\n        treeData={items}\n        rowHeight={150}\n        theme={FileExplorerTheme}\n        getNodeKey={({node}) => node.id}\n        onChange={treeData => setItems(treeData)}\n        generateNodeProps={({node, path}) => ({\n          title: (\n            <>\n              <input\n                style={{\n                  width: '90%',\n                }}\n                value={node.title}\n                onChange={event =>\n                  update('title', event.target.value, node, path)\n                }\n              />\n              <input\n                style={{\n                  width: '40px',\n                }}\n                value={node.estimated}\n                type=\"number\"\n                onChange={event =>\n                  update('estimated', event.target.value, node, path)\n                }\n              />\n              <label>{node.completed}</label>\n            </>\n          ),\n          subtitle: (\n            <textarea\n              style={{}}\n              rows={5}\n              cols={60}\n              value={node.subtitle}\n              onChange={event =>\n                update('subtitle', event.target.value, node, path)\n              }\n            />\n          ),\n          buttons: [\n            <button\n              onClick={() => {\n                setItems(\n                  items =>\n                    addNodeUnderParent({\n                      treeData: items,\n                      parentKey: path[path.length - 1],\n                      expandParent: true,\n                      getNodeKey,\n                      newNode: newNode(),\n                    }).treeData,\n                )\n              }}\n            >\n              Add\n            </button>,\n            <button\n              onClick={() =>\n                setItems(items =>\n                  removeNodeAtPath({\n                    treeData: items,\n                    path,\n                    getNodeKey,\n                  }),\n                )\n              }\n            >\n              X\n            </button>,\n            <input\n              type=\"radio\"\n              readOnly\n              checked={node.id === activeListItemId}\n              onClick={() => setActiveListItemId(node.id)}\n            />,\n          ],\n        })}\n      />\n    </>\n  )\n}\n","import React, {useContext, useState} from 'react'\nimport {ListsContext} from '../contexts/ListsContext'\nimport {ActiveListContext} from '../contexts/ActiveListContext'\nimport {ActiveListNameContext} from '../contexts/ActiveListNameContext'\n\nexport function TodoListSelector(props) {\n  const [lists, setLists] = useContext(ListsContext)\n  const [activeList, setActiveList] = useContext(ActiveListContext)\n  const [activeListName, setActiveListName] = useContext(ActiveListNameContext)\n\n  const [todoListName, setTodoListName] = useState('')\n\n  const todoLists = Object.keys(lists)\n\n  const handleAdd = e => {\n    e.preventDefault()\n    if (!todoListName) return\n\n    setLists(lists => ({\n      ...lists,\n      [todoListName.trim()]: [],\n    }))\n    setTodoListName('')\n  }\n\n  const handleChange = ({target: {value}}) => {\n    setActiveListName(value)\n    setActiveList(lists[value])\n  }\n\n  const handleRemove = e => {\n    e.preventDefault()\n\n    if (Object.keys(lists).length === 1) {\n      alert('cannot remove last list')\n      return\n    }\n\n    let {[activeListName]: omit, ...rest} = lists\n    setLists(lists => rest)\n    setActiveList(lists[Object.keys(rest)[0]])\n    setActiveListName(Object.keys(rest)[0])\n  }\n\n  return (\n    <div>\n      <div>\n        <form onSubmit={handleAdd}>\n          <label htmlFor=\"name-id\">Add new list</label>\n          <input\n            name=\"name\"\n            value={todoListName}\n            onChange={e => setTodoListName(e.target.value)}\n            placeholder=\"Name of the list\"\n            id=\"name-id\"\n          />\n          <button type=\"submit\">Add</button>\n        </form>\n      </div>\n      <div>\n        <form onSubmit={handleRemove}>\n          <label htmlFor=\"name-id\">Remove a list</label>\n          <select name=\"list\" value={activeListName} onChange={handleChange}>\n            {todoLists &&\n              todoLists.map((item, index) => (\n                <option key={index} value={item}>\n                  {item}\n                </option>\n              ))}\n          </select>\n          <button type=\"submit\">Remove</button>\n        </form>\n      </div>\n    </div>\n  )\n}\n","import React, {useState, useContext} from 'react'\nimport {CountDownTimer} from '../views/CountDownTimer'\nimport {TodoTree} from '../views/TodoTree'\nimport {TodoListSelector} from '../views/TodoListSelector'\n\nimport ListsProvider from '../contexts/ListsContext'\nimport ActiveListProvider from '../contexts/ActiveListContext'\nimport ActiveListNameProvider from '../contexts/ActiveListNameContext'\nimport ActiveListItemIdProvider from '../contexts/ActiveListItemIdContext'\n\nfunction Main() {\n  return (\n    <ActiveListNameProvider>\n      <ActiveListItemIdProvider>\n        <ListsProvider>\n          <ActiveListProvider>\n            <div style={{textAlign: 'center'}}>\n              <CountDownTimer />\n              <TodoListSelector />\n              <div style={{height: 400}}>\n                <TodoTree />\n              </div>\n            </div>\n          </ActiveListProvider>\n        </ListsProvider>\n      </ActiveListItemIdProvider>\n    </ActiveListNameProvider>\n  )\n}\n\nexport default Main\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport * as serviceWorker from './serviceWorker'\nimport Main from './layouts/main'\n\nfunction App() {\n  return <Main />\n}\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}