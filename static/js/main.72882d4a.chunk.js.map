{"version":3,"sources":["serviceWorker.js","contexts/SelectionContext.js","contexts/TodoListContext.js","contexts/ActiveContext.js","views/CountDownTimer.js","utils/useNotification.js","utils/useTimeout.js","views/TodoTree.js","views/TodoListSelector.js","layouts/main.js","index.js"],"names":["Boolean","window","location","hostname","match","defaultSelection","list","item","SelectionContext","React","createContext","SelectionProvider","_ref","children","_useLocalStorage","useLocalStorage","_useLocalStorage2","Object","slicedToArray","selection","setSelection","react_default","a","createElement","Provider","value","defaultTodoLists","list1","id","title","subtitle","estimated","completed","expanded","list2","TodoListContext","TodoListProvider","lists","setLists","ActiveContext","ActiveProvider","_useContext","useContext","_useContext2","_useContext3","_useContext4","_useState","useState","_useState2","activeItems","setActiveItems","useEffect","objectSpread","defineProperty","toConsumableArray","items","buttonStyles","border","background","fontSize","padding","margin","width","phases","pomodoro","seconds","short-break","long-break","CountDownTimer","_useNotification","Notification","requestPermission","text","concat","alert","update","activeList","setActiveList","getNodeKey","node","selectedItem","matches","find","treeData","searchMethod","modifiedTreeData","changeNodeAtPath","path","newNode","useTimeout","_useReducer","useReducer","state","newState","running","_useReducer2","_useReducer2$","setState","timerRef","useRef","format","m","Math","floor","s","clearInterval","current","_format","_format2","document","_format3","_format4","remainingTime","Fragment","keys","map","phase","key","onClick","handleSetClick","style","display","currentTime","setInterval","disabled","TodoTree","setItems","random","field","index_esm","height","rowHeight","theme","FileExplorerTheme","_ref2","onChange","generateNodeProps","_ref3","event","target","type","buttons","addNodeUnderParent","parentKey","length","expandParent","removeNodeAtPath","readOnly","checked","TodoListSelector","props","_useContext5","_useContext6","todoListName","setTodoListName","todoLists","onSubmit","e","preventDefault","trim","htmlFor","name","placeholder","objectWithoutProperties","_toPropertyKey","listName","index","Main","textAlign","ReactDOM","render","layouts_main","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4KAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,mHCfAC,EAAmB,CACvBC,KAAM,QACNC,KAAM,GAGKC,EAAmBC,IAAMC,gBAEvB,SAASC,EAATC,GAAuC,IAAXC,EAAWD,EAAXC,SAAWC,EAClBC,IAChC,YACAV,GAHkDW,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAC7CK,EAD6CH,EAAA,GAClCI,EADkCJ,EAAA,GAKpD,OACEK,EAAAC,EAAAC,cAACf,EAAiBgB,SAAlB,CAA2BC,MAAO,CAACN,EAAWC,IAC3CP,GCbP,IAAMa,EAAmB,CACvBC,MAAO,CACL,CACEC,GAAI,EACJC,MAAO,QACPC,SAAU,WACVC,UAAW,EACXC,UAAW,GAEb,CACEJ,GAAI,EACJC,MAAO,QACPC,SAAU,WACVC,UAAW,EACXC,UAAW,EACXC,UAAU,EACVpB,SAAU,CACR,CACEe,GAAI,EACJC,MAAO,UACPC,SAAU,WACVC,UAAW,EACXC,UAAW,MAKnBE,MAAO,CACL,CACEN,GAAI,EACJC,MAAO,QACPC,SAAU,WACVC,UAAW,EACXC,UAAW,KAKJG,EAAkB1B,IAAMC,gBAEtB,SAAS0B,EAATxB,GAAsC,IAAXC,EAAWD,EAAXC,SAAWC,EACzBC,IAAgB,QAASW,GADAV,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAC5CuB,EAD4CrB,EAAA,GACrCsB,EADqCtB,EAAA,GAGnD,OACEK,EAAAC,EAAAC,cAACY,EAAgBX,SAAjB,CAA0BC,MAAO,CAACY,EAAOC,IACtCzB,GC3CA,IAAM0B,EAAgB9B,IAAMC,gBAEpB,SAAS8B,EAAT5B,GAAoC,IAAXC,EAAWD,EAAXC,SAAW4B,EACvBC,qBAAWP,GADYQ,EAAA1B,OAAAC,EAAA,EAAAD,CAAAwB,EAAA,GAC1CJ,EAD0CM,EAAA,GACnCL,EADmCK,EAAA,GAAAC,EAEfF,qBAAWlC,GAFIqC,EAAA5B,OAAAC,EAAA,EAAAD,CAAA2B,EAAA,GAE1CzB,EAF0C0B,EAAA,GAAAC,GAAAD,EAAA,GAGXE,mBAAS,kBAAMV,EAAMlB,EAAUb,SAHpB0C,EAAA/B,OAAAC,EAAA,EAAAD,CAAA6B,EAAA,GAG1CG,EAH0CD,EAAA,GAG7BE,EAH6BF,EAAA,GAiBjD,OAZAG,oBAAU,WACRb,EAASrB,OAAAmC,EAAA,EAAAnC,CAAA,GAEJoB,EAFGpB,OAAAoC,EAAA,EAAApC,CAAA,GAGLE,EAAUb,KAHLW,OAAAqC,EAAA,EAAArC,CAGgBgC,OAEvB,CAACA,IAEJE,oBAAU,WACRD,EAAe,SAAAK,GAAK,OAAAtC,OAAAqC,EAAA,EAAArC,CAAQoB,EAAMlB,EAAUb,UAC3C,CAACa,EAAUb,KAAMa,EAAUZ,OAG5Bc,EAAAC,EAAAC,cAACgB,EAAcf,SAAf,CAAwBC,MAAO,CAACwB,EAAaC,IAC1CrC,eCvBP,IAAM2C,EAAe,CACnBC,OAAQ,iBACRC,WAAY,OACZC,SAAU,MACVC,QAAS,GACTC,OAAQ,EACRC,MAAO,KAEHC,EAAS,CACbC,SAAU,CACRC,QAAS,KACTpC,MAAO,YAETqC,cAAe,CACbD,QAAS,IACTpC,MAAO,eAETsC,aAAc,CACZF,QAAS,IACTpC,MAAO,eAIJ,SAASuC,IAAiB,IAAAC,GCxB/BlB,oBAAU,WACRmB,aAAaC,qBACZ,IAMI,CAJP,SAAeC,GACb,IAAIF,aAAJ,GAAAG,OAAoBD,EAApB,aAAqC,ODoBhCE,EADwBzD,OAAAC,EAAA,EAAAD,CAAAoD,EAAA,MAExBM,EExBF,WAAsB,IAAAlC,EACOC,qBAAWlC,GADlBmC,EAAA1B,OAAAC,EAAA,EAAAD,CAAAwB,EAAA,GACpBtB,EADoBwB,EAAA,GAAAC,GAAAD,EAAA,GAESD,qBAAWH,IAFpBM,EAAA5B,OAAAC,EAAA,EAAAD,CAAA2B,EAAA,GAEpBgC,EAFoB/B,EAAA,GAERgC,EAFQhC,EAAA,GAIrBiC,EAAa,SAAAlE,GAAA,OAAAA,EAAEmE,KAAenD,IAqBpC,MAAO,CAAC+C,OAnBR,WACE,IAAMK,EAAe7D,EAAUZ,KAMzB0E,EALSC,YAAK,CAClBJ,WAAYA,EACZK,SAAUP,EACVQ,aAAc,SAAA7E,GAAI,OAAIA,EAAKwE,KAAKnD,KAAOoD,KAElBC,QAAQ,GAEzBI,EAAmBC,YAAiB,CACxCH,SAAUP,EACVW,KAAMN,EAAQM,KACdT,aACAU,QAAQvE,OAAAmC,EAAA,EAAAnC,CAAA,GAAKgE,EAAQF,KAAd,CAAoB/C,UAAWiD,EAAQF,KAAK/C,UAAY,MAGjE6C,EAAc,SAAAD,GAAU,OAAA3D,OAAAqC,EAAA,EAAArC,CAAQoE,OFEjBI,GAAVd,OAFwBe,EAIeC,qBAC5C,SAACC,EAAOC,GAAR,OAAA5E,OAAAmC,EAAA,EAAAnC,CAAA,GACK2E,EACAC,IAEL,CACEC,SAAS,EACT7B,QAAS,EACTpC,MAAO,KAZoBkE,EAAA9E,OAAAC,EAAA,EAAAD,CAAAyE,EAAA,GAAAM,EAAAD,EAAA,GAIvB9B,EAJuB+B,EAIvB/B,QAASpC,EAJcmE,EAIdnE,MAAOiE,EAJOE,EAIPF,QAAUG,EAJHF,EAAA,GAgBzBG,EAAWC,iBAAO,MA6CxB,SAASC,EAAOnC,GACd,IAAMoC,EAAIC,KAAKC,MAAOtC,EAAU,KAAQ,IAClCuC,EAAIF,KAAKC,MAAOtC,EAAU,KAAQ,IACxC,MAAO,IAAAQ,OAAI4B,EAAI,GAAK,IAAM,IAAnB5B,OAAwB4B,GAAxB,GAAA5B,OAAgC+B,EAAI,GAAK,IAAM,IAA/C/B,OAAoD+B,IA9C7DrD,oBAAU,WAMR,OALA8C,EAAS,CACPhC,QAASF,EAAOC,SAASC,QACzBpC,MAAOkC,EAAOC,SAASnC,QAGlB,kBAAM4E,cAAcP,EAASQ,WACnC,IAEHvD,oBAAU,WAAM,IAAAwD,EACCP,EAAOnC,GADR2C,EAAA3F,OAAAC,EAAA,EAAAD,CAAA0F,EAAA,GACPN,EADOO,EAAA,GACJJ,EADII,EAAA,GAEdC,SAAShF,MAAT,GAAA4C,OAAoB4B,EAApB,KAAA5B,OAAyB+B,EAAzB,OAAA/B,OAAgC5C,IAC/B,CAACoC,IA9B2B,IAAA6C,EAmEhBV,EAAOnC,GAnES8C,EAAA9F,OAAAC,EAAA,EAAAD,CAAA6F,EAAA,GAmExBT,EAnEwBU,EAAA,GAmErBP,EAnEqBO,EAAA,GAoEzBC,EAAa,GAAAvC,OAAM4B,EAAN,MAAA5B,OAAY+B,EAAZ,KAEnB,OACEnF,EAAAC,EAAAC,cAAAF,EAAAC,EAAA2F,SAAA,KACGhG,OAAOiG,KAAKnD,GAAQoD,IAAI,SAAAC,GAAK,OAC5B/F,EAAAC,EAAAC,cAAA,UACE8F,IAAKD,EACLE,QAAS,kBAvBjB,SAAwBF,GACtBX,cAAcP,EAASQ,SACvBT,EAAS,CACPhC,QAASmD,EAAMnD,QACfpC,MAAOuF,EAAMvF,MACbiE,SAAS,IAkBUyB,CAAexD,EAAOqD,KACrCI,MAAOhE,GAENO,EAAOqD,GAAOvF,SAGnBR,EAAAC,EAAAC,cAAA,SACEiG,MAAO,CACL7D,SAAU,MACV8D,QAAS,UAGVT,GAEH3F,EAAAC,EAAAC,cAAA,UACE+F,QA1DN,WACE,GAAIxB,EACFW,cAAcP,EAASQ,aAClB,CACL,IAAIgB,EAAczD,EAAU,EAC5BgC,EAAS,CAAChC,QAASyD,IAEnBxB,EAASQ,QAAUiB,YAAY,WACT,IAAhBD,GACFjB,cAAcP,EAASQ,SACvBhC,EAAM7C,GACN8C,KAEAsB,EAAS,CAAChC,UAAWyD,KAEtB,KAELzB,EAAS,CAACH,SAAUA,KA0ChB0B,MAAOhE,EACPoE,SAAsB,IAAZ3D,GAET6B,EAAU,OAAS,iBAMb1B,sBGpHR,SAASyD,IAAW,IAAApF,EACCC,qBAAWH,GADZI,EAAA1B,OAAAC,EAAA,EAAAD,CAAAwB,EAAA,GAClBc,EADkBZ,EAAA,GACXmF,EADWnF,EAAA,GAAAC,EAESF,qBAAWlC,GAFpBqC,EAAA5B,OAAAC,EAAA,EAAAD,CAAA2B,EAAA,GAElBzB,EAFkB0B,EAAA,GAEPzB,EAFOyB,EAAA,GAInBiC,EAAa,SAAAlE,GAAA,OAAAA,EAAEmE,KAAenD,IAC9B4D,EAAU,iBAAO,CACrB5D,GAAI0E,KAAKyB,SACTlG,MAAK,YACLC,SAAU,eACVC,UAAW,EACXC,UAAW,IAGP2C,EAAS,SAACqD,EAAOvG,EAAOsD,EAAMQ,GAClCuC,EAAS,SAAAvE,GAAK,OACZ+B,YAAiB,CACfH,SAAU5B,EACVgC,OACAT,aACAU,QAAQvE,OAAAmC,EAAA,EAAAnC,CAAA,GAAK8D,EAAN9D,OAAAoC,EAAA,EAAApC,CAAA,GAAa+G,EAAQvG,SAKlC,OACEJ,EAAAC,EAAAC,cAAAF,EAAAC,EAAA2F,SAAA,KACE5F,EAAAC,EAAAC,cAAA,UAAQ+F,QAAS,kBAAMQ,EAAS,SAAAvE,GAAK,SAAAkB,OAAAxD,OAAAqC,EAAA,EAAArC,CAAQsC,GAAR,CAAeiC,UAApD,OAGAnE,EAAAC,EAAAC,cAAC0G,EAAA,EAAD,CACET,MAAO,CACLU,OAAQ,SAEV/C,SAAU5B,EACV4E,UAAW,GACXC,MAAOC,IACPvD,WAAY,SAAAwD,GAAA,OAAAA,EAAEvD,KAAenD,IAC7B2G,SAAU,SAAApD,GAAQ,OAAI2C,EAAS3C,IAC/BqD,kBAAmB,SAAAC,GAAA,IAAE1D,EAAF0D,EAAE1D,KAAMQ,EAARkD,EAAQlD,KAAR,MAAmB,CACpC1D,MACER,EAAAC,EAAAC,cAAAF,EAAAC,EAAA2F,SAAA,KACE5F,EAAAC,EAAAC,cAAA,SACEiG,MAAO,GACP/F,MAAOsD,EAAKlD,MACZ0G,SAAU,SAAAG,GAAK,OACb/D,EAAO,QAAS+D,EAAMC,OAAOlH,MAAOsD,EAAMQ,MAG9ClE,EAAAC,EAAAC,cAAA,SACEiG,MAAO,CACL1D,MAAO,QAETrC,MAAOsD,EAAKhD,UACZ6G,KAAK,SACLL,SAAU,SAAAG,GAAK,OACb/D,EAAO,YAAa+D,EAAMC,OAAOlH,MAAOsD,EAAMQ,MAGlDlE,EAAAC,EAAAC,cAAA,aAAQwD,EAAK/C,YACX+C,EAAKlE,UAAYQ,EAAAC,EAAAC,cAAA,8BAGvBO,SACET,EAAAC,EAAAC,cAAA,SACEiG,MAAO,GACP/F,MAAOsD,EAAKjD,SACZyG,SAAU,SAAAG,GAAK,OACb/D,EAAO,WAAY+D,EAAMC,OAAOlH,MAAOsD,EAAMQ,MAInDsD,QAAS,CACPxH,EAAAC,EAAAC,cAAA,UACE+F,QAAS,WACPQ,EACE,SAAAvE,GAAK,OACHuF,YAAmB,CACjB3D,SAAU5B,EACVwF,UAAWxD,EAAKA,EAAKyD,OAAS,GAC9BC,cAAc,EACdnE,aACAU,QAASA,MACRL,aAVX,OAgBA9D,EAAAC,EAAAC,cAAA,UACE+F,QAAS,kBACPQ,EAAS,SAAAvE,GAAK,OACZ2F,YAAiB,CACf/D,SAAU5B,EACVgC,OACAT,mBANR,KAaAzD,EAAAC,EAAAC,cAAA,SACEqH,KAAK,QACLO,UAAQ,EACRC,QAASrE,EAAKnD,KAAOT,EAAUZ,KAC/B+G,QAAS,WACPlG,EAAa,SAAAD,GAAS,OAAAF,OAAAmC,EAAA,EAAAnC,CAAA,GACjBE,EADiB,CAEpBZ,KAAMwE,EAAKnD,8WCnHtB,SAASyH,EAAiBC,GAAO,IAAA7G,EACJC,qBAAWlC,GADPmC,EAAA1B,OAAAC,EAAA,EAAAD,CAAAwB,EAAA,GAC/BtB,EAD+BwB,EAAA,GACpBvB,EADoBuB,EAAA,GAAAC,EAEZF,qBAAWP,GAFCU,EAAA5B,OAAAC,EAAA,EAAAD,CAAA2B,EAAA,GAE/BP,EAF+BQ,EAAA,GAExBP,EAFwBO,EAAA,GAAA0G,EAGV7G,qBAAWP,GAHDqH,EAAAvI,OAAAC,EAAA,EAAAD,CAAAsI,EAAA,GAAAzG,GAAA0G,EAAA,GAAAA,EAAA,GAIEzG,mBAAS,KAJXC,EAAA/B,OAAAC,EAAA,EAAAD,CAAA6B,EAAA,GAI/B2G,EAJ+BzG,EAAA,GAIjB0G,EAJiB1G,EAAA,GAMhC2G,EAAY1I,OAAOiG,KAAK7E,GA8B9B,OACEhB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,QAAMqI,SA/BG,SAAAC,GACbA,EAAEC,iBACGL,IAELnH,EAAS,SAAAD,GAAK,OAAApB,OAAAmC,EAAA,EAAAnC,CAAA,GACToB,EADSpB,OAAAoC,EAAA,EAAApC,CAAA,GAEXwI,EAAaM,OAAS,OAEzBL,EAAgB,OAwBVrI,EAAAC,EAAAC,cAAA,SAAOyI,QAAQ,WAAf,gBACA3I,EAAAC,EAAAC,cAAA,SACE0I,KAAK,OACLxI,MAAOgI,EACPlB,SAAU,SAAAsB,GAAC,OAAIH,EAAgBG,EAAElB,OAAOlH,QACxCyI,YAAY,mBACZtI,GAAG,YAELP,EAAAC,EAAAC,cAAA,UAAQqH,KAAK,UAAb,SAGJvH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,QAAMqI,SAjCS,SAAAC,GACnBA,EAAEC,iBACgC,IAA9B7I,OAAOiG,KAAK7E,GAAO2G,QAKvB1G,EAAS,SAAAD,GAEP,OAD2CA,EAArClB,EAAS,MADCF,OAAAkJ,EAAA,EAAAlJ,CAC2BoB,EAD3B,CACVlB,EAAS,MADCgG,IAAAiD,MAIlBhJ,EAAa,SAAAD,GAAS,MAAK,CACzBb,KAAMW,OAAOiG,KAAK7E,GAAO,GACzB9B,KAAM,OAVNmE,MAAM,6BA+BFrD,EAAAC,EAAAC,cAAA,SAAOyI,QAAQ,WAAf,iBACA3I,EAAAC,EAAAC,cAAA,UACE0I,KAAK,OACLxI,MAAON,EAAS,KAChBoH,SAAU,SAAAsB,GACR,IAAMQ,EAAWR,EAAElB,OAAOlH,MAE1BL,EAAa,SAAAD,GAAS,MAAK,CACzBb,KAAM+J,EACN9J,KAAM,QAIToJ,GACCA,EAAUxC,IAAI,SAAC5G,EAAM+J,GAAP,OACZjJ,EAAAC,EAAAC,cAAA,UAAQ8F,IAAKiD,EAAO7I,MAAOlB,GACxBA,MAITc,EAAAC,EAAAC,cAAA,UAAQqH,KAAK,UAAb,aClDK2B,MAlBf,WACE,OACElJ,EAAAC,EAAAC,cAACZ,EAAD,KACEU,EAAAC,EAAAC,cAACa,EAAD,KACEf,EAAAC,EAAAC,cAACiB,EAAD,KACEnB,EAAAC,EAAAC,cAAA,OAAKiG,MAAO,CAACgD,UAAW,WACtBnJ,EAAAC,EAAAC,cAAC6C,EAAD,MACA/C,EAAAC,EAAAC,cAAC8H,EAAD,MACAhI,EAAAC,EAAAC,cAAA,OAAKiG,MAAO,CAACU,OAAQ,MACnB7G,EAAAC,EAAAC,cAACsG,EAAD,YCTd4C,IAASC,OAAOrJ,EAAAC,EAAAC,cAJhB,WACE,OAAOF,EAAAC,EAAAC,cAACoJ,EAAD,OAGO,MAAS9D,SAAS+D,eAAe,SVwH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.72882d4a.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA',\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.',\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React, {useState} from 'react'\nimport useLocalStorage from 'react-use/lib/useLocalStorage'\n\nconst defaultSelection = {\n  list: 'list2',\n  item: 4,\n}\n\nexport const SelectionContext = React.createContext()\n\nexport default function SelectionProvider({children}) {\n  const [selection, setSelection] = useLocalStorage(\n    'selection',\n    defaultSelection,\n  )\n  return (\n    <SelectionContext.Provider value={[selection, setSelection]}>\n      {children}\n    </SelectionContext.Provider>\n  )\n}\n","import React, {useState, useContext, useEffect} from 'react'\nimport useLocalStorage from 'react-use/lib/useLocalStorage'\nimport {SelectionContext} from './SelectionContext'\n\nconst defaultTodoLists = {\n  list1: [\n    {\n      id: 1,\n      title: 'todo1',\n      subtitle: 'subtitle',\n      estimated: 3,\n      completed: 0,\n    },\n    {\n      id: 2,\n      title: 'todo2',\n      subtitle: 'subtitle',\n      estimated: 2,\n      completed: 1,\n      expanded: true,\n      children: [\n        {\n          id: 3,\n          title: 'todo2.1',\n          subtitle: 'subtitle',\n          estimated: 4,\n          completed: 0,\n        },\n      ],\n    },\n  ],\n  list2: [\n    {\n      id: 4,\n      title: 'todo1',\n      subtitle: 'subtitle',\n      estimated: 4,\n      completed: 0,\n    },\n  ],\n}\n\nexport const TodoListContext = React.createContext()\n\nexport default function TodoListProvider({children}) {\n  const [lists, setLists] = useLocalStorage('items', defaultTodoLists)\n\n  return (\n    <TodoListContext.Provider value={[lists, setLists]}>\n      {children}\n    </TodoListContext.Provider>\n  )\n}\n","import React, {useState, useContext, useEffect} from 'react'\nimport useLocalStorage from 'react-use/lib/useLocalStorage'\n\nimport {SelectionContext} from './SelectionContext'\nimport {TodoListContext} from './TodoListContext'\n\nexport const ActiveContext = React.createContext()\n\nexport default function ActiveProvider({children}) {\n  const [lists, setLists] = useContext(TodoListContext)\n  const [selection, setSelection] = useContext(SelectionContext)\n  const [activeItems, setActiveItems] = useState(() => lists[selection.list])\n\n  useEffect(() => {\n    setLists({\n      //TODO merge professinal\n      ...lists,\n      [selection.list]: [...activeItems],\n    })\n  }, [activeItems])\n\n  useEffect(() => {\n    setActiveItems(items => [...lists[selection.list]])\n  }, [selection.list, selection.item])\n\n  return (\n    <ActiveContext.Provider value={[activeItems, setActiveItems]}>\n      {children}\n    </ActiveContext.Provider>\n  )\n}\n","import React, {useReducer, useEffect, useRef} from 'react'\nimport {useNotification} from '../utils/useNotification'\nimport {useTimeout} from '../utils/useTimeout'\n\nconst buttonStyles = {\n  border: '1px solid #ccc',\n  background: '#fff',\n  fontSize: '2em',\n  padding: 15,\n  margin: 5,\n  width: 200,\n}\nconst phases = {\n  pomodoro: {\n    seconds: 25 * 60,\n    title: 'Pomodoro',\n  },\n  'short-break': {\n    seconds: 5 * 60,\n    title: 'Short break',\n  },\n  'long-break': {\n    seconds: 15 * 60,\n    title: 'Long break',\n  },\n}\n\nexport function CountDownTimer() {\n  const [alert] = useNotification()\n  const {update} = useTimeout()\n\n  const [{seconds, title, running}, setState] = useReducer(\n    (state, newState) => ({\n      ...state,\n      ...newState,\n    }),\n    {\n      running: false,\n      seconds: 0,\n      title: '',\n    },\n  )\n\n  const timerRef = useRef(null)\n\n  useEffect(() => {\n    setState({\n      seconds: phases.pomodoro.seconds,\n      title: phases.pomodoro.title,\n    })\n\n    return () => clearInterval(timerRef.current)\n  }, [])\n\n  useEffect(() => {\n    const [m, s] = format(seconds)\n    document.title = `${m}:${s} - ${title}`\n  }, [seconds])\n\n  function handleRunClick() {\n    if (running) {\n      clearInterval(timerRef.current)\n    } else {\n      let currentTime = seconds - 1\n      setState({seconds: currentTime})\n\n      timerRef.current = setInterval(() => {\n        if (currentTime === 0) {\n          clearInterval(timerRef.current)\n          alert(title)\n          update()\n        } else {\n          setState({seconds: --currentTime})\n        }\n      }, 1000)\n    }\n    setState({running: !running})\n  }\n\n  function handleSetClick(phase) {\n    clearInterval(timerRef.current)\n    setState({\n      seconds: phase.seconds,\n      title: phase.title,\n      running: false,\n    })\n  }\n\n  function format(seconds) {\n    const m = Math.floor((seconds % 3600) / 60)\n    const s = Math.floor((seconds % 3600) % 60)\n    return [`${m < 10 ? '0' : ''}${m}`, `${s < 10 ? '0' : ''}${s}`]\n  }\n\n  const [m, s] = format(seconds)\n  const remainingTime = `${m}m:${s}s`\n\n  return (\n    <>\n      {Object.keys(phases).map(phase => (\n        <button\n          key={phase}\n          onClick={() => handleSetClick(phases[phase])}\n          style={buttonStyles}\n        >\n          {phases[phase].title}\n        </button>\n      ))}\n      <label\n        style={{\n          fontSize: '5em',\n          display: 'block',\n        }}\n      >\n        {remainingTime}\n      </label>\n      <button\n        onClick={handleRunClick}\n        style={buttonStyles}\n        disabled={seconds === 0}\n      >\n        {running ? 'Stop' : 'Start'}\n      </button>\n    </>\n  )\n}\n\nexport default CountDownTimer\n","import {useEffect} from 'react'\n\nexport function useNotification() {\n  useEffect(() => {\n    Notification.requestPermission()\n  }, [])\n\n  function alert(text) {\n    new Notification(`${text} is over!`, {})\n  }\n\n  return [alert]\n}\n","import {useContext} from 'react'\nimport {ActiveContext} from '../contexts/ActiveContext'\nimport {SelectionContext} from '../contexts/SelectionContext'\n\nimport {find, changeNodeAtPath} from 'react-sortable-tree'\nexport function useTimeout() {\n  const [selection, setSelection] = useContext(SelectionContext)\n  const [activeList, setActiveList] = useContext(ActiveContext)\n\n  const getNodeKey = ({node}) => node.id\n\n  function update() {\n    const selectedItem = selection.item\n    const result = find({\n      getNodeKey: getNodeKey,\n      treeData: activeList,\n      searchMethod: item => item.node.id === selectedItem,\n    })\n    const matches = result.matches[0]\n\n    const modifiedTreeData = changeNodeAtPath({\n      treeData: activeList,\n      path: matches.path,\n      getNodeKey,\n      newNode: {...matches.node, completed: matches.node.completed + 1},\n    })\n\n    setActiveList(activeList => [...modifiedTreeData])\n  }\n\n  return {update}\n}\n","import React, {useContext} from 'react'\nimport 'react-sortable-tree/style.css'\nimport SortableTree, {\n  changeNodeAtPath,\n  addNodeUnderParent,\n  removeNodeAtPath,\n} from 'react-sortable-tree'\nimport {ActiveContext} from '../contexts/ActiveContext'\nimport {SelectionContext} from '../contexts/SelectionContext'\nimport FileExplorerTheme from 'react-sortable-tree-theme-minimal'\n\nexport function TodoTree() {\n  const [items, setItems] = useContext(ActiveContext)\n  const [selection, setSelection] = useContext(SelectionContext)\n\n  const getNodeKey = ({node}) => node.id\n  const newNode = () => ({\n    id: Math.random(),\n    title: `new title`,\n    subtitle: 'new subtitle',\n    estimated: 0,\n    completed: 0,\n  })\n\n  const update = (field, value, node, path) => {\n    setItems(items =>\n      changeNodeAtPath({\n        treeData: items,\n        path,\n        getNodeKey,\n        newNode: {...node, [field]: value},\n      }),\n    )\n  }\n\n  return (\n    <>\n      <button onClick={() => setItems(items => [...items, newNode()])}>\n        Add\n      </button>\n      <SortableTree\n        style={{\n          height: '50rem',\n        }}\n        treeData={items}\n        rowHeight={80}\n        theme={FileExplorerTheme}\n        getNodeKey={({node}) => node.id}\n        onChange={treeData => setItems(treeData)}\n        generateNodeProps={({node, path}) => ({\n          title: (\n            <>\n              <input\n                style={{}}\n                value={node.title}\n                onChange={event =>\n                  update('title', event.target.value, node, path)\n                }\n              />\n              <input\n                style={{\n                  width: '40px',\n                }}\n                value={node.estimated}\n                type=\"number\"\n                onChange={event =>\n                  update('estimated', event.target.value, node, path)\n                }\n              />\n              <label>{node.completed}</label>\n              {!node.children && <label>\"selectable\"</label>}\n            </>\n          ),\n          subtitle: (\n            <input\n              style={{}}\n              value={node.subtitle}\n              onChange={event =>\n                update('subtitle', event.target.value, node, path)\n              }\n            />\n          ),\n          buttons: [\n            <button\n              onClick={() => {\n                setItems(\n                  items =>\n                    addNodeUnderParent({\n                      treeData: items,\n                      parentKey: path[path.length - 1],\n                      expandParent: true,\n                      getNodeKey,\n                      newNode: newNode(),\n                    }).treeData,\n                )\n              }}\n            >\n              Add\n            </button>,\n            <button\n              onClick={() =>\n                setItems(items =>\n                  removeNodeAtPath({\n                    treeData: items,\n                    path,\n                    getNodeKey,\n                  }),\n                )\n              }\n            >\n              X\n            </button>,\n            <input\n              type=\"radio\"\n              readOnly\n              checked={node.id === selection.item}\n              onClick={() => {\n                setSelection(selection => ({\n                  ...selection,\n                  item: node.id,\n                }))\n              }}\n            />,\n          ],\n        })}\n      />\n    </>\n  )\n}\n","import React, {useContext, useState, useEffect} from 'react'\nimport {SelectionContext} from '../contexts/SelectionContext'\nimport {TodoListContext} from '../contexts/TodoListContext'\n\nexport function TodoListSelector(props) {\n  const [selection, setSelection] = useContext(SelectionContext)\n  const [lists, setLists] = useContext(TodoListContext)\n  const [active, setActive] = useContext(TodoListContext)\n  const [todoListName, setTodoListName] = useState('')\n\n  const todoLists = Object.keys(lists)\n\n  const submit = e => {\n    e.preventDefault()\n    if (!todoListName) return\n\n    setLists(lists => ({\n      ...lists,\n      [todoListName.trim()]: [],\n    }))\n    setTodoListName('')\n  }\n\n  const handleRemove = e => {\n    e.preventDefault()\n    if (Object.keys(lists).length === 1) {\n      alert('cannot remove last list')\n      return\n    }\n\n    setLists(lists => {\n      let {[selection['list']]: omit, ...rest} = lists\n      return rest\n    })\n    setSelection(selection => ({\n      list: Object.keys(lists)[0],\n      item: '',\n    }))\n  }\n\n  return (\n    <div>\n      <div>\n        <form onSubmit={submit}>\n          <label htmlFor=\"name-id\">Add new list</label>\n          <input\n            name=\"name\"\n            value={todoListName}\n            onChange={e => setTodoListName(e.target.value)}\n            placeholder=\"Name of the list\"\n            id=\"name-id\"\n          />\n          <button type=\"submit\">Add</button>\n        </form>\n      </div>\n      <div>\n        <form onSubmit={handleRemove}>\n          <label htmlFor=\"name-id\">Remove a list</label>\n          <select\n            name=\"list\"\n            value={selection['list']}\n            onChange={e => {\n              const listName = e.target.value\n\n              setSelection(selection => ({\n                list: listName,\n                item: '',\n              }))\n            }}\n          >\n            {todoLists &&\n              todoLists.map((item, index) => (\n                <option key={index} value={item}>\n                  {item}\n                </option>\n              ))}\n          </select>\n          <button type=\"submit\">Remove</button>\n        </form>\n      </div>\n    </div>\n  )\n}\n","import React, {useState, useContext} from 'react'\nimport {CountDownTimer} from '../views/CountDownTimer'\nimport {TodoTree} from '../views/TodoTree'\nimport {TodoListSelector} from '../views/TodoListSelector'\n\nimport TodoListProvider from '../contexts/TodoListContext'\nimport SelectionProvider from '../contexts/SelectionContext'\nimport ActiveProvider from '../contexts/ActiveContext'\n\nfunction Main() {\n  return (\n    <SelectionProvider>\n      <TodoListProvider>\n        <ActiveProvider>\n          <div style={{textAlign: 'center'}}>\n            <CountDownTimer />\n            <TodoListSelector />\n            <div style={{height: 400}}>\n              <TodoTree />\n            </div>\n          </div>\n        </ActiveProvider>\n      </TodoListProvider>\n    </SelectionProvider>\n  )\n}\n\nexport default Main\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport * as serviceWorker from './serviceWorker'\nimport Main from './layouts/main'\n\nfunction App() {\n  return <Main />\n}\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}