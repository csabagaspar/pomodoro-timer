{"version":3,"sources":["serviceWorker.js","contexts/SelectionContext.js","contexts/TodoListContext.js","views/CountDownTimer.js","utils/useNotification.js","utils/useTimeout.js","contexts/ActiveContext.js","views/TodoTree.js","views/TodoListSelector.js","layouts/main.js","index.js"],"names":["Boolean","window","location","hostname","match","defaultSelection","list","item","SelectionContext","React","createContext","SelectionProvider","_ref","children","_useLocalStorage","useLocalStorage","_useLocalStorage2","Object","slicedToArray","selection","setSelection","react_default","a","createElement","Provider","value","defaultTodoLists","list1","id","title","subtitle","estimated","completed","expanded","list2","TodoListContext","TodoListProvider","lists","setLists","buttonStyles","border","background","fontSize","padding","margin","width","phases","pomodoro","seconds","short-break","long-break","CountDownTimer","_useNotification","useEffect","Notification","requestPermission","text","concat","alert","update","_useContext","useContext","_useContext2","_useContext3","_useContext4","getNodeKey","node","console","log","treeData","selectedItem","find","searchMethod","objectSpread","useTimeout","_useReducer","useReducer","state","newState","running","_useReducer2","_useReducer2$","setState","timerRef","useRef","format","m","Math","floor","s","clearInterval","current","_format","_format2","document","_format3","_format4","remainingTime","Fragment","keys","map","phase","key","onClick","handleSetClick","style","display","currentTime","setInterval","disabled","ActiveContext","ActiveProvider","_useState","useState","_useState2","activeItems","setActiveItems","defineProperty","toConsumableArray","items","TodoTree","setItems","newNode","random","field","path","changeNodeAtPath","index_esm","height","rowHeight","_ref2","onChange","generateNodeProps","_ref3","event","target","type","buttons","addNodeUnderParent","parentKey","length","expandParent","removeNodeAtPath","readOnly","checked","TodoListSelector","props","_useContext5","_useContext6","todoListName","setTodoListName","todoLists","onSubmit","e","preventDefault","trim","htmlFor","name","placeholder","objectWithoutProperties","_toPropertyKey","listName","index","Main","textAlign","ReactDOM","render","main","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5ed154fb.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA',\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.',\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React, {useState} from 'react'\nimport useLocalStorage from 'react-use/lib/useLocalStorage'\n\nconst defaultSelection = {\n  list: 'list2',\n  item: 4,\n}\n\nexport const SelectionContext = React.createContext()\n\nexport default function SelectionProvider({children}) {\n  const [selection, setSelection] = useLocalStorage(\n    'selection',\n    defaultSelection,\n  )\n  return (\n    <SelectionContext.Provider value={[selection, setSelection]}>\n      {children}\n    </SelectionContext.Provider>\n  )\n}\n","import React, {useState, useContext, useEffect} from 'react'\nimport useLocalStorage from 'react-use/lib/useLocalStorage'\nimport {SelectionContext} from './SelectionContext'\n\nconst defaultTodoLists = {\n  list1: [\n    {\n      id: 1,\n      title: 'todo1',\n      subtitle: 'subtitle',\n      estimated: 3,\n      completed: 0,\n    },\n    {\n      id: 2,\n      title: 'todo2',\n      subtitle: 'subtitle',\n      estimated: 2,\n      completed: 1,\n      expanded: true,\n      children: [\n        {\n          id: 3,\n          title: 'todo2.1',\n          subtitle: 'subtitle',\n          estimated: 4,\n          completed: 0,\n        },\n      ],\n    },\n  ],\n  list2: [\n    {\n      id: 4,\n      title: 'todo1',\n      subtitle: 'subtitle',\n      estimated: 4,\n      completed: 0,\n    },\n  ],\n}\n\nexport const TodoListContext = React.createContext()\n\nexport default function TodoListProvider({children}) {\n  const [lists, setLists] = useLocalStorage('items', defaultTodoLists)\n\n  return (\n    <TodoListContext.Provider value={[lists, setLists]}>\n      {children}\n    </TodoListContext.Provider>\n  )\n}\n","import React, {useReducer, useEffect, useRef} from 'react'\nimport {useNotification} from '../utils/useNotification'\nimport {useTimeout} from '../utils/useTimeout'\n\nconst buttonStyles = {\n  border: '1px solid #ccc',\n  background: '#fff',\n  fontSize: '2em',\n  padding: 15,\n  margin: 5,\n  width: 200,\n}\nconst phases = {\n  pomodoro: {\n    //seconds: 25 * 60,\n    seconds: 2 * 1,\n    title: 'Pomodoro',\n  },\n  'short-break': {\n    seconds: 5 * 60,\n    title: 'Short break',\n  },\n  'long-break': {\n    seconds: 15 * 60,\n    title: 'Long break',\n  },\n}\n\nexport function CountDownTimer() {\n  const [alert] = useNotification()\n  const {update} = useTimeout()\n\n  const [{seconds, title, running}, setState] = useReducer(\n    (state, newState) => ({\n      ...state,\n      ...newState,\n    }),\n    {\n      running: false,\n      seconds: 0,\n      title: '',\n    },\n  )\n\n  const timerRef = useRef(null)\n\n  useEffect(() => {\n    setState({\n      seconds: phases.pomodoro.seconds,\n      title: phases.pomodoro.title,\n    })\n\n    return () => clearInterval(timerRef.current)\n  }, [])\n\n  useEffect(() => {\n    const [m, s] = format(seconds)\n    document.title = `${m}:${s} - ${title}`\n  }, [seconds])\n\n  function handleRunClick() {\n    if (running) {\n      clearInterval(timerRef.current)\n    } else {\n      let currentTime = seconds - 1\n      setState({seconds: currentTime})\n\n      timerRef.current = setInterval(() => {\n        if (currentTime === 0) {\n          clearInterval(timerRef.current)\n          alert(title)\n          update()\n        } else {\n          setState({seconds: --currentTime})\n        }\n      }, 1000)\n    }\n    setState({running: !running})\n  }\n\n  function handleSetClick(phase) {\n    clearInterval(timerRef.current)\n    setState({\n      seconds: phase.seconds,\n      title: phase.title,\n      running: false,\n    })\n  }\n\n  function format(seconds) {\n    const m = Math.floor((seconds % 3600) / 60)\n    const s = Math.floor((seconds % 3600) % 60)\n    return [`${m < 10 ? '0' : ''}${m}`, `${s < 10 ? '0' : ''}${s}`]\n  }\n\n  const [m, s] = format(seconds)\n  const remainingTime = `${m}m:${s}s`\n\n  return (\n    <>\n      {Object.keys(phases).map(phase => (\n        <button\n          key={phase}\n          onClick={() => handleSetClick(phases[phase])}\n          style={buttonStyles}\n        >\n          {phases[phase].title}\n        </button>\n      ))}\n      <label\n        style={{\n          fontSize: '5em',\n          display: 'block',\n        }}\n      >\n        {remainingTime}\n      </label>\n      <button\n        onClick={handleRunClick}\n        style={buttonStyles}\n        disabled={seconds === 0}\n      >\n        {running ? 'Stop' : 'Start'}\n      </button>\n    </>\n  )\n}\n\nexport default CountDownTimer\n","import {useEffect} from 'react'\n\nexport function useNotification() {\n  useEffect(() => {\n    Notification.requestPermission()\n  }, [])\n\n  function alert(text) {\n    new Notification(`${text} is over!`, {})\n  }\n\n  return [alert]\n}\n","import {useContext} from 'react'\nimport {TodoListContext} from '../contexts/TodoListContext'\nimport {SelectionContext} from '../contexts/SelectionContext'\n\nimport SortableTree, {find} from 'react-sortable-tree'\nexport function useTimeout() {\n  const [selection, setSelection] = useContext(SelectionContext)\n  const [lists, setLists] = useContext(TodoListContext)\n\n  const getNodeKey = ({node}) => node.id\n  const callback = () => {\n    console.log('callback')\n  }\n  function update() {\n    console.log('update')\n\n    const treeData = lists[selection['list']]\n    const selectedItem = selection.item\n    const result = find({\n      getNodeKey: getNodeKey,\n      treeData: treeData,\n      searchMethod: item => item.node.id === selectedItem,\n    })\n\n    setLists(lists => ({\n      ...lists,\n      //[selection['list']]: lists['list'] //TODO\n    }))\n  }\n\n  return {update}\n}\n","import React, {useState, useContext, useEffect} from 'react'\nimport useLocalStorage from 'react-use/lib/useLocalStorage'\n\nimport {SelectionContext} from './SelectionContext'\nimport {TodoListContext} from './TodoListContext'\n\nexport const ActiveContext = React.createContext()\n\nexport default function ActiveProvider({children}) {\n  const [lists, setLists] = useContext(TodoListContext)\n  const [selection, setSelection] = useContext(SelectionContext)\n\n  const [activeItems, setActiveItems] = useState(() => lists[selection.list])\n\n  useEffect(() => {\n    setLists({\n      //TODO merge professinal\n      ...lists,\n      [selection.list]: [...activeItems],\n    })\n  }, [activeItems])\n\n  useEffect(() => {\n    console.log('selection changed')\n    setActiveItems(items => [...lists[selection.list]])\n  }, [selection.list, selection.item])\n\n  return (\n    <ActiveContext.Provider value={[activeItems, setActiveItems]}>\n      {children}\n    </ActiveContext.Provider>\n  )\n}\n","import React, {useContext} from 'react'\nimport 'react-sortable-tree/style.css'\nimport SortableTree, {\n  changeNodeAtPath,\n  addNodeUnderParent,\n  removeNodeAtPath,\n} from 'react-sortable-tree'\nimport {ActiveContext} from '../contexts/ActiveContext'\nimport {SelectionContext} from '../contexts/SelectionContext'\n\nexport function TodoTree() {\n  const [items, setItems] = useContext(ActiveContext)\n  const [selection, setSelection] = useContext(SelectionContext)\n\n  const getNodeKey = ({node}) => node.id\n  const newNode = () => ({\n    id: Math.random(),\n    title: `new title`,\n    subtitle: 'new subtitle',\n    estimated: 0,\n    completed: 0,\n  })\n\n  const update = (field, value, node, path) => {\n    setItems(items =>\n      changeNodeAtPath({\n        treeData: items,\n        path,\n        getNodeKey,\n        newNode: {...node, [field]: value},\n      }),\n    )\n  }\n\n  return (\n    <>\n      <button onClick={() => setItems(items => [...items, newNode()])}>\n        Add\n      </button>\n      <SortableTree\n        style={{\n          height: '50rem',\n        }}\n        treeData={items}\n        rowHeight={80}\n        getNodeKey={({node}) => node.id}\n        onChange={treeData => setItems(treeData)}\n        generateNodeProps={({node, path}) => ({\n          title: (\n            <>\n              <input\n                style={{}}\n                value={node.title}\n                onChange={event =>\n                  update('title', event.target.value, node, path)\n                }\n              />\n              <input\n                style={{\n                  width: '40px',\n                }}\n                value={node.estimated}\n                type=\"number\"\n                onChange={event =>\n                  update('estimated', event.target.value, node, path)\n                }\n              />\n              <label>{node.completed}</label>\n              {!node.children && <label>\"selectable\"</label>}\n            </>\n          ),\n          subtitle: (\n            <input\n              style={{}}\n              value={node.subtitle}\n              onChange={event =>\n                update('subtitle', event.target.value, node, path)\n              }\n            />\n          ),\n          buttons: [\n            <button\n              onClick={() => {\n                console.log(path, getNodeKey)\n                setItems(\n                  items =>\n                    addNodeUnderParent({\n                      treeData: items,\n                      parentKey: path[path.length - 1],\n                      expandParent: true,\n                      getNodeKey,\n                      newNode: newNode(),\n                    }).treeData,\n                )\n              }}\n            >\n              Add\n            </button>,\n            <button\n              onClick={() =>\n                setItems(items =>\n                  removeNodeAtPath({\n                    treeData: items,\n                    path,\n                    getNodeKey,\n                  }),\n                )\n              }\n            >\n              X\n            </button>,\n            <input\n              type=\"radio\"\n              readOnly\n              checked={node.id === selection.item}\n              onClick={() => {\n                setSelection(selection => ({\n                  ...selection,\n                  item: node.id,\n                }))\n              }}\n            />,\n          ],\n        })}\n      />\n    </>\n  )\n}\n","import React, {useContext, useState, useEffect} from 'react'\nimport {SelectionContext} from '../contexts/SelectionContext'\nimport {TodoListContext} from '../contexts/TodoListContext'\nimport {ActiveContext} from '../contexts/ActiveContext'\n\nexport function TodoListSelector(props) {\n  const [selection, setSelection] = useContext(SelectionContext)\n  const [lists, setLists] = useContext(TodoListContext)\n  const [active, setActive] = useContext(TodoListContext)\n  const [todoListName, setTodoListName] = useState('')\n\n  const todoLists = Object.keys(lists)\n\n  const submit = e => {\n    e.preventDefault()\n    if (!todoListName) return\n\n    setLists(lists => ({\n      ...lists,\n      [todoListName.trim()]: [],\n    }))\n    setTodoListName('')\n  }\n\n  const handleRemove = e => {\n    e.preventDefault()\n    if (Object.keys(lists).length === 1) {\n      alert('cannot remove last list')\n      return\n    }\n\n    setLists(lists => {\n      let {[selection['list']]: omit, ...rest} = lists\n      return rest\n    })\n    setSelection(selection => ({\n      list: Object.keys(lists)[0],\n      item: '',\n    }))\n  }\n\n  return (\n    <div>\n      <div>\n        <form onSubmit={submit}>\n          <label htmlFor=\"name-id\">Add new list</label>\n          <input\n            name=\"name\"\n            value={todoListName}\n            onChange={e => setTodoListName(e.target.value)}\n            placeholder=\"Name of the list\"\n            id=\"name-id\"\n          />\n          <button type=\"submit\">Add</button>\n        </form>\n      </div>\n      <div>\n        <form onSubmit={handleRemove}>\n          <label htmlFor=\"name-id\">Remove a list</label>\n          <select\n            name=\"list\"\n            value={selection['list']}\n            onChange={e => {\n              console.log('tar', e.target.value)\n              const listName = e.target.value\n\n              setSelection(selection => ({\n                list: listName,\n                item: '',\n              }))\n            }}\n          >\n            {todoLists &&\n              todoLists.map((item, index) => (\n                <option key={index} value={item}>\n                  {item}\n                </option>\n              ))}\n          </select>\n          <button type=\"submit\">Remove</button>\n        </form>\n      </div>\n    </div>\n  )\n}\n","import React, {useState, useContext} from 'react'\nimport {CountDownTimer} from '../views/CountDownTimer'\nimport {TodoTree} from '../views/TodoTree'\nimport {TodoListSelector} from '../views/TodoListSelector'\n\nimport TodoListProvider from '../contexts/TodoListContext'\nimport SelectionProvider from '../contexts/SelectionContext'\nimport ActiveProvider from '../contexts/ActiveContext'\n\nfunction Main() {\n  return (\n    <SelectionProvider>\n      <TodoListProvider>\n        <ActiveProvider>\n          <div style={{textAlign: 'center'}}>\n            <CountDownTimer />\n            <TodoListSelector />\n            <div style={{height: 400}}>\n              <TodoTree />\n            </div>\n          </div>\n        </ActiveProvider>\n      </TodoListProvider>\n    </SelectionProvider>\n  )\n}\n\nexport default Main\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport * as serviceWorker from './serviceWorker'\nimport Main from './layouts/main'\n\nfunction App() {\n  return <Main />\n}\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}